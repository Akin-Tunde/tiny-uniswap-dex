{
	"id": "402a1698aad17dc6933b5d735250ff65",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AmmExchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n// This is our Automated Market Maker contract\r\ncontract AmmExchange is ERC20 {\r\n    IERC20 public immutable tokenA;\r\n    IERC20 public immutable tokenB;\r\n\r\n    uint256 public reserveA;\r\n    uint256 public reserveB;\r\n\r\n    // The constructor initializes the two tokens the exchange will trade\r\n    constructor(address _tokenA, address _tokenB) ERC20(\"Akin LP Token\", \"AK-LP\") {\r\n        tokenA = IERC20(_tokenA);\r\n        tokenB = IERC20(_tokenB);\r\n    }\r\n\r\n    // --- VIEW FUNCTIONS ---\r\n    function getReserves() public view returns (uint256, uint256) {\r\n        return (reserveA, reserveB);\r\n    }\r\n\r\n    // --- LIQUIDITY FUNCTIONS ---\r\n\r\n    // Adds liquidity to the pool.\r\n    function addLiquidity(uint256 _amountA, uint256 _amountB) public returns (uint256 liquidity) {\r\n        // This contract must be approved to spend the user's tokens first!\r\n        require(tokenA.transferFrom(msg.sender, address(this), _amountA), \"Transfer A failed\");\r\n        require(tokenB.transferFrom(msg.sender, address(this), _amountB), \"Transfer B failed\");\r\n\r\n        // Mint LP tokens to the user\r\n        if (totalSupply() == 0) {\r\n            // If this is the first liquidity provider, mint LP tokens equal to amountA\r\n            liquidity = _amountA;\r\n        } else {\r\n            // Otherwise, mint LP tokens proportionally\r\n            liquidity = (_amountA * totalSupply()) / reserveA;\r\n        }\r\n\r\n        require(liquidity > 0, \"Insufficient liquidity minted\");\r\n        _mint(msg.sender, liquidity);\r\n\r\n        // Update reserves\r\n        reserveA += _amountA;\r\n        reserveB += _amountB;\r\n    }\r\n\r\n    // Removes liquidity from the pool.\r\n    function removeLiquidity(uint256 _lpTokenAmount) public returns (uint256 amountA, uint256 amountB) {\r\n        require(_lpTokenAmount > 0, \"Cannot remove 0 liquidity\");\r\n        \r\n        uint256 totalLP = totalSupply();\r\n        amountA = (reserveA * _lpTokenAmount) / totalLP;\r\n        amountB = (reserveB * _lpTokenAmount) / totalLP;\r\n\r\n        require(amountA > 0 && amountB > 0, \"Insufficient amounts to withdraw\");\r\n\r\n        _burn(msg.sender, _lpTokenAmount); // Burn the user's LP tokens\r\n        tokenA.transfer(msg.sender, amountA); // Send back Token A\r\n        tokenB.transfer(msg.sender, amountB); // Send back Token B\r\n        \r\n        reserveA -= amountA;\r\n        reserveB -= amountB;\r\n    }\r\n\r\n    // --- SWAP FUNCTION ---\r\n\r\n    // Swaps one token for another.\r\n    function swap(address _tokenIn, uint256 _amountIn) public returns (uint256 amountOut) {\r\n        require(_tokenIn == address(tokenA) || _tokenIn == address(tokenB), \"Invalid input token\");\r\n        require(_amountIn > 0, \"Amount in must be positive\");\r\n\r\n        // Pull the input tokens from the user\r\n        IERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn);\r\n\r\n        // Calculate output amount based on constant product formula, with a 0.3% fee\r\n        uint256 amountInWithFee = _amountIn * 997; // 100% - 0.3% = 99.7%\r\n\r\n        if (_tokenIn == address(tokenA)) { // User is swapping Token A for Token B\r\n            uint256 numerator = amountInWithFee * reserveB;\r\n            uint256 denominator = (reserveA * 1000) + amountInWithFee;\r\n            amountOut = numerator / denominator;\r\n            \r\n            reserveA += _amountIn;\r\n            reserveB -= amountOut;\r\n            tokenB.transfer(msg.sender, amountOut);\r\n        } else { // User is swapping Token B for Token A\r\n            uint256 numerator = amountInWithFee * reserveA;\r\n            uint256 denominator = (reserveB * 1000) + amountInWithFee;\r\n            amountOut = numerator / denominator;\r\n\r\n            reserveB += _amountIn;\r\n            reserveA -= amountOut;\r\n            tokenA.transfer(msg.sender, amountOut);\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AmmExchange.sol": {
				"AmmExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lpTokenAmount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AmmExchange.sol\":226:3955  contract AmmExchange is ERC20 {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/AmmExchange.sol\":476:632  constructor(address _tokenA, address _tokenB) ERC20(\"Akin LP Token\", \"AK-LP\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x20b5b4b7102628102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xdc, 0x0414b2d4c5)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/AmmExchange.sol\":565:589  tokenA = IERC20(_tokenA) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/AmmExchange.sol\":600:624  tokenB = IERC20(_tokenB) */\n  and\n  0xa0\n  mstore\n    /* \"contracts/AmmExchange.sol\":226:3955  contract AmmExchange is ERC20 {... */\n  jump(tag_18)\n    /* \"#utility.yul\":14:191   */\ntag_12:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:621   */\ntag_13:\n    /* \"#utility.yul\":555:565   */\n  0x4e487b71\n    /* \"#utility.yul\":550:553   */\n  0xe0\n    /* \"#utility.yul\":546:566   */\n  shl\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":536:567   */\n  mstore\n    /* \"#utility.yul\":586:590   */\n  0x41\n    /* \"#utility.yul\":583:584   */\n  0x04\n    /* \"#utility.yul\":576:591   */\n  mstore\n    /* \"#utility.yul\":610:614   */\n  0x24\n    /* \"#utility.yul\":607:608   */\n  0x00\n    /* \"#utility.yul\":600:615   */\n  revert\n    /* \"#utility.yul\":626:1006   */\ntag_14:\n    /* \"#utility.yul\":705:706   */\n  0x01\n    /* \"#utility.yul\":701:713   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":748:760   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":769:830   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":823:827   */\n  0x7f\n    /* \"#utility.yul\":815:821   */\n  dup3\n    /* \"#utility.yul\":811:828   */\n  and\n    /* \"#utility.yul\":801:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":769:830   */\ntag_27:\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":868:874   */\n  dup3\n    /* \"#utility.yul\":865:879   */\n  lt\n    /* \"#utility.yul\":845:863   */\n  dup2\n    /* \"#utility.yul\":842:880   */\n  sub\n    /* \"#utility.yul\":839:1000   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":922:932   */\n  0x4e487b71\n    /* \"#utility.yul\":917:920   */\n  0xe0\n    /* \"#utility.yul\":913:933   */\n  shl\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":903:934   */\n  mstore\n    /* \"#utility.yul\":957:961   */\n  0x22\n    /* \"#utility.yul\":954:955   */\n  0x04\n    /* \"#utility.yul\":947:962   */\n  mstore\n    /* \"#utility.yul\":985:989   */\n  0x24\n    /* \"#utility.yul\":982:983   */\n  0x00\n    /* \"#utility.yul\":975:990   */\n  revert\n    /* \"#utility.yul\":839:1000   */\ntag_28:\n  pop\n    /* \"#utility.yul\":626:1006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1137:1655   */\ntag_16:\n    /* \"#utility.yul\":1239:1241   */\n  0x1f\n    /* \"#utility.yul\":1234:1237   */\n  dup3\n    /* \"#utility.yul\":1231:1242   */\n  gt\n    /* \"#utility.yul\":1228:1649   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1275:1280   */\n  dup1\n    /* \"#utility.yul\":1272:1273   */\n  0x00\n    /* \"#utility.yul\":1265:1281   */\n  mstore\n    /* \"#utility.yul\":1319:1323   */\n  0x20\n    /* \"#utility.yul\":1316:1317   */\n  0x00\n    /* \"#utility.yul\":1306:1324   */\n  keccak256\n    /* \"#utility.yul\":1389:1391   */\n  0x1f\n    /* \"#utility.yul\":1377:1387   */\n  dup5\n    /* \"#utility.yul\":1373:1392   */\n  add\n    /* \"#utility.yul\":1370:1371   */\n  0x05\n    /* \"#utility.yul\":1366:1393   */\n  shr\n    /* \"#utility.yul\":1360:1364   */\n  dup2\n    /* \"#utility.yul\":1356:1394   */\n  add\n    /* \"#utility.yul\":1425:1429   */\n  0x20\n    /* \"#utility.yul\":1413:1423   */\n  dup6\n    /* \"#utility.yul\":1410:1430   */\n  lt\n    /* \"#utility.yul\":1407:1454   */\n  iszero\n  tag_32\n  jumpi\n  pop\n    /* \"#utility.yul\":1448:1452   */\n  dup1\n    /* \"#utility.yul\":1407:1454   */\ntag_32:\n    /* \"#utility.yul\":1503:1505   */\n  0x1f\n    /* \"#utility.yul\":1498:1501   */\n  dup5\n    /* \"#utility.yul\":1494:1506   */\n  add\n    /* \"#utility.yul\":1491:1492   */\n  0x05\n    /* \"#utility.yul\":1487:1507   */\n  shr\n    /* \"#utility.yul\":1481:1485   */\n  dup3\n    /* \"#utility.yul\":1477:1508   */\n  add\n    /* \"#utility.yul\":1467:1508   */\n  swap2\n  pop\n    /* \"#utility.yul\":1558:1639   */\ntag_33:\n    /* \"#utility.yul\":1576:1578   */\n  dup2\n    /* \"#utility.yul\":1569:1574   */\n  dup2\n    /* \"#utility.yul\":1566:1579   */\n  lt\n    /* \"#utility.yul\":1558:1639   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1621:1637   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1602:1603   */\n  0x01\n    /* \"#utility.yul\":1591:1604   */\n  add\n    /* \"#utility.yul\":1558:1639   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":1562:1565   */\n  pop\n  pop\n    /* \"#utility.yul\":1228:1649   */\ntag_31:\n    /* \"#utility.yul\":1137:1655   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1831:3130   */\ntag_8:\n    /* \"#utility.yul\":1951:1961   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1973:2003   */\n  dup2\n  gt\n    /* \"#utility.yul\":1970:2026   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2006:2024   */\n  tag_39\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":2035:2132   */\n  tag_40\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2085:2123   */\n  tag_41\n    /* \"#utility.yul\":2117:2121   */\n  dup5\n    /* \"#utility.yul\":2111:2122   */\n  sload\n    /* \"#utility.yul\":2085:2123   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2079:2083   */\n  dup5\n    /* \"#utility.yul\":2035:2132   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2212:2214   */\n  0x1f\n    /* \"#utility.yul\":2201:2215   */\n  dup3\n  gt\n    /* \"#utility.yul\":2229:2230   */\n  0x01\n    /* \"#utility.yul\":2224:2873   */\n  dup2\n  eq\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2917:2918   */\n  0x00\n    /* \"#utility.yul\":2934:2940   */\n  dup4\n    /* \"#utility.yul\":2931:3020   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":2986:3005   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2980:3006   */\n  mload\n    /* \"#utility.yul\":2931:3020   */\ntag_44:\n  not(0x00)\n    /* \"#utility.yul\":1788:1789   */\n  0x03\n    /* \"#utility.yul\":1784:1795   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1780:1804   */\n  shr\n    /* \"#utility.yul\":1776:1805   */\n  not\n    /* \"#utility.yul\":1766:1806   */\n  and\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1808:1819   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1763:1820   */\n  or\n    /* \"#utility.yul\":3033:3114   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2194:3124   */\n  jump(tag_35)\n    /* \"#utility.yul\":2224:2873   */\ntag_43:\n    /* \"#utility.yul\":1084:1085   */\n  0x00\n    /* \"#utility.yul\":1077:1091   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x20\n    /* \"#utility.yul\":1108:1126   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2260:2280   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2378:2600   */\ntag_47:\n    /* \"#utility.yul\":2392:2399   */\n  dup3\n    /* \"#utility.yul\":2389:2390   */\n  dup2\n    /* \"#utility.yul\":2386:2400   */\n  lt\n    /* \"#utility.yul\":2378:2600   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2474:2493   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2468:2494   */\n  mload\n    /* \"#utility.yul\":2453:2495   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2581:2585   */\n  0x20\n    /* \"#utility.yul\":2566:2586   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2534:2535   */\n  0x01\n    /* \"#utility.yul\":2522:2536   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2408:2420   */\n  add\n    /* \"#utility.yul\":2378:2600   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":2382:2385   */\n  pop\n    /* \"#utility.yul\":2628:2634   */\n  dup5\n    /* \"#utility.yul\":2619:2626   */\n  dup3\n    /* \"#utility.yul\":2616:2635   */\n  lt\n    /* \"#utility.yul\":2613:2814   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2689:2708   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2683:2709   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2772:2773   */\n  0x03\n    /* \"#utility.yul\":2768:2782   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2787   */\n  0xf8\n    /* \"#utility.yul\":2764:2788   */\n  and\n    /* \"#utility.yul\":2760:2797   */\n  shr\n    /* \"#utility.yul\":2756:2798   */\n  not\n    /* \"#utility.yul\":2741:2799   */\n  and\n    /* \"#utility.yul\":2726:2800   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2613:2814   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2860:2861   */\n  0x01\n    /* \"#utility.yul\":2844:2858   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2840:2862   */\n  add\n    /* \"#utility.yul\":2827:2863   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1831:3130   */\n  jump\t// out\ntag_18:\n    /* \"contracts/AmmExchange.sol\":226:3955  contract AmmExchange is ERC20 {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AmmExchange.sol\":226:3955  contract AmmExchange is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f64b55b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd004f0f7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0fc63d10\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AmmExchange.sol\":671:779  function getReserves() public view returns (uint256, uint256) {... */\n    tag_4:\n        /* \"contracts/AmmExchange.sol\":752:760  reserveA */\n      sload(0x05)\n        /* \"contracts/AmmExchange.sol\":762:770  reserveB */\n      sload(0x06)\n        /* \"contracts/AmmExchange.sol\":671:779  function getReserves() public view returns (uint256, uint256) {... */\n    tag_25:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":611:636   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":667:669   */\n      0x20\n        /* \"#utility.yul\":652:670   */\n      dup4\n      add\n        /* \"#utility.yul\":645:679   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":584:602   */\n      add\n        /* \"contracts/AmmExchange.sol\":671:779  function getReserves() public view returns (uint256, uint256) {... */\n      tag_23\n        /* \"#utility.yul\":437:685   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1338:1352   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1331:1353   */\n      iszero\n        /* \"#utility.yul\":1313:1354   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1173:1360   */\n      jump\n        /* \"contracts/AmmExchange.sol\":263:293  IERC20 public immutable tokenA */\n    tag_6:\n      tag_35\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1733:1758   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1706:1724   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1587:1764   */\n      jump\n        /* \"contracts/AmmExchange.sol\":369:392  uint256 public reserveB */\n    tag_8:\n      tag_39\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_29\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2290:2326   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2278:2280   */\n      0x20\n        /* \"#utility.yul\":2263:2281   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":2148:2332   */\n      jump\n        /* \"contracts/AmmExchange.sol\":300:330  IERC20 public immutable tokenB */\n    tag_11:\n      tag_35\n      immutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_39\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_21\n      tag_64\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":1831:2538  function removeLiquidity(uint256 _lpTokenAmount) public returns (uint256 amountA, uint256 amountB) {... */\n    tag_14:\n      tag_25\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":861:1782  function addLiquidity(uint256 _amountA, uint256 _amountB) public returns (uint256 liquidity) {... */\n    tag_15:\n      tag_39\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_29\n      tag_77\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":2615:3952  function swap(address _tokenIn, uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_17:\n      tag_39\n      tag_81\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":339:362  uint256 public reserveA */\n    tag_18:\n      tag_39\n      sload(0x05)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_39\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_100:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":1831:2538  function removeLiquidity(uint256 _lpTokenAmount) public returns (uint256 amountA, uint256 amountB) {... */\n    tag_69:\n        /* \"contracts/AmmExchange.sol\":1896:1911  uint256 amountA */\n      0x00\n        /* \"contracts/AmmExchange.sol\":1913:1928  uint256 amountB */\n      0x00\n        /* \"contracts/AmmExchange.sol\":1966:1967  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":1949:1963  _lpTokenAmount */\n      dup4\n        /* \"contracts/AmmExchange.sol\":1949:1967  _lpTokenAmount > 0 */\n      gt\n        /* \"contracts/AmmExchange.sol\":1941:1997  require(_lpTokenAmount > 0, \"Cannot remove 0 liquidity\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3962:3964   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":1941:1997  require(_lpTokenAmount > 0, \"Cannot remove 0 liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3944:3965   */\n      mstore\n        /* \"#utility.yul\":4001:4003   */\n      0x19\n        /* \"#utility.yul\":3981:3999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3974:4004   */\n      mstore\n      shl(0x38, 0x43616e6e6f742072656d6f76652030206c6971756964697479)\n        /* \"#utility.yul\":4020:4038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4013:4068   */\n      mstore\n        /* \"#utility.yul\":4085:4103   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":1941:1997  require(_lpTokenAmount > 0, \"Cannot remove 0 liquidity\") */\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/AmmExchange.sol\":2018:2033  uint256 totalLP */\n      0x00\n        /* \"contracts/AmmExchange.sol\":2036:2049  totalSupply() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/AmmExchange.sol\":2036:2049  totalSupply() */\n    tag_124:\n        /* \"contracts/AmmExchange.sol\":2018:2049  uint256 totalLP = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":2100:2107  totalLP */\n      dup1\n        /* \"contracts/AmmExchange.sol\":2082:2096  _lpTokenAmount */\n      dup5\n        /* \"contracts/AmmExchange.sol\":2071:2079  reserveA */\n      sload(0x05)\n        /* \"contracts/AmmExchange.sol\":2071:2096  reserveA * _lpTokenAmount */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/AmmExchange.sol\":2070:2107  (reserveA * _lpTokenAmount) / totalLP */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/AmmExchange.sol\":2060:2107  amountA = (reserveA * _lpTokenAmount) / totalLP */\n      swap3\n      pop\n        /* \"contracts/AmmExchange.sol\":2158:2165  totalLP */\n      dup1\n        /* \"contracts/AmmExchange.sol\":2140:2154  _lpTokenAmount */\n      dup5\n        /* \"contracts/AmmExchange.sol\":2129:2137  reserveB */\n      sload(0x06)\n        /* \"contracts/AmmExchange.sol\":2129:2154  reserveB * _lpTokenAmount */\n      tag_129\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_129:\n        /* \"contracts/AmmExchange.sol\":2128:2165  (reserveB * _lpTokenAmount) / totalLP */\n      tag_130\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_130:\n        /* \"contracts/AmmExchange.sol\":2118:2165  amountB = (reserveB * _lpTokenAmount) / totalLP */\n      swap2\n      pop\n        /* \"contracts/AmmExchange.sol\":2196:2197  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":2186:2193  amountA */\n      dup4\n        /* \"contracts/AmmExchange.sol\":2186:2197  amountA > 0 */\n      gt\n        /* \"contracts/AmmExchange.sol\":2186:2212  amountA > 0 && amountB > 0 */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"contracts/AmmExchange.sol\":2211:2212  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":2201:2208  amountB */\n      dup3\n        /* \"contracts/AmmExchange.sol\":2201:2212  amountB > 0 */\n      gt\n        /* \"contracts/AmmExchange.sol\":2186:2212  amountA > 0 && amountB > 0 */\n    tag_131:\n        /* \"contracts/AmmExchange.sol\":2178:2249  require(amountA > 0 && amountB > 0, \"Insufficient amounts to withdraw\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":2178:2249  require(amountA > 0 && amountB > 0, \"Insufficient amounts to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4825:4846   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4862:4880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4855:4885   */\n      mstore\n        /* \"#utility.yul\":4921:4955   */\n      0x496e73756666696369656e7420616d6f756e747320746f207769746864726177\n        /* \"#utility.yul\":4901:4919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4894:4956   */\n      mstore\n        /* \"#utility.yul\":4973:4991   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":2178:2249  require(amountA > 0 && amountB > 0, \"Insufficient amounts to withdraw\") */\n      tag_122\n        /* \"#utility.yul\":4641:4997   */\n      jump\n        /* \"contracts/AmmExchange.sol\":2178:2249  require(amountA > 0 && amountB > 0, \"Insufficient amounts to withdraw\") */\n    tag_132:\n        /* \"contracts/AmmExchange.sol\":2262:2295  _burn(msg.sender, _lpTokenAmount) */\n      tag_135\n        /* \"contracts/AmmExchange.sol\":2268:2278  msg.sender */\n      caller\n        /* \"contracts/AmmExchange.sol\":2280:2294  _lpTokenAmount */\n      dup6\n        /* \"contracts/AmmExchange.sol\":2262:2267  _burn */\n      tag_136\n        /* \"contracts/AmmExchange.sol\":2262:2295  _burn(msg.sender, _lpTokenAmount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/AmmExchange.sol\":2335:2371  tokenA.transfer(msg.sender, amountA) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2335:2341  tokenA */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"contracts/AmmExchange.sol\":2335:2350  tokenA.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/AmmExchange.sol\":2335:2371  tokenA.transfer(msg.sender, amountA) */\n      tag_137\n      swap1\n        /* \"contracts/AmmExchange.sol\":2351:2361  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":2363:2370  amountA */\n      dup8\n      swap1\n        /* \"contracts/AmmExchange.sol\":2335:2371  tokenA.transfer(msg.sender, amountA) */\n      0x04\n      add\n      tag_138\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      pop\n        /* \"contracts/AmmExchange.sol\":2403:2439  tokenB.transfer(msg.sender, amountB) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2403:2409  tokenB */\n      immutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n        /* \"contracts/AmmExchange.sol\":2403:2418  tokenB.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/AmmExchange.sol\":2403:2439  tokenB.transfer(msg.sender, amountB) */\n      tag_143\n      swap1\n        /* \"contracts/AmmExchange.sol\":2419:2429  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":2431:2438  amountB */\n      dup7\n      swap1\n        /* \"contracts/AmmExchange.sol\":2403:2439  tokenB.transfer(msg.sender, amountB) */\n      0x04\n      add\n      tag_138\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_146:\n      pop\n        /* \"contracts/AmmExchange.sol\":2493:2500  amountA */\n      dup3\n        /* \"contracts/AmmExchange.sol\":2481:2489  reserveA */\n      0x05\n      0x00\n        /* \"contracts/AmmExchange.sol\":2481:2500  reserveA -= amountA */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":2523:2530  amountB */\n      dup2\n        /* \"contracts/AmmExchange.sol\":2511:2519  reserveB */\n      0x06\n      0x00\n        /* \"contracts/AmmExchange.sol\":2511:2530  reserveB -= amountB */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":1930:2538  {... */\n      pop\n        /* \"contracts/AmmExchange.sol\":1831:2538  function removeLiquidity(uint256 _lpTokenAmount) public returns (uint256 amountA, uint256 amountB) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/AmmExchange.sol\":861:1782  function addLiquidity(uint256 _amountA, uint256 _amountB) public returns (uint256 liquidity) {... */\n    tag_74:\n        /* \"contracts/AmmExchange.sol\":1050:1106  tokenA.transferFrom(msg.sender, address(this), _amountA) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/AmmExchange.sol\":935:952  uint256 liquidity */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":1050:1056  tokenA */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"contracts/AmmExchange.sol\":1050:1069  tokenA.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/AmmExchange.sol\":1050:1106  tokenA.transferFrom(msg.sender, address(this), _amountA) */\n      tag_151\n      swap1\n        /* \"contracts/AmmExchange.sol\":1070:1080  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":1090:1094  this */\n      address\n      swap1\n        /* \"contracts/AmmExchange.sol\":1097:1105  _amountA */\n      dup9\n      swap1\n        /* \"contracts/AmmExchange.sol\":1050:1106  tokenA.transferFrom(msg.sender, address(this), _amountA) */\n      0x04\n      add\n      tag_152\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"contracts/AmmExchange.sol\":1042:1128  require(tokenA.transferFrom(msg.sender, address(this), _amountA), \"Transfer A failed\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6274:6276   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":1042:1128  require(tokenA.transferFrom(msg.sender, address(this), _amountA), \"Transfer A failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6256:6277   */\n      mstore\n        /* \"#utility.yul\":6313:6315   */\n      0x11\n        /* \"#utility.yul\":6293:6311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6286:6316   */\n      mstore\n      shl(0x7a, 0x151c985b9cd9995c88104819985a5b1959)\n        /* \"#utility.yul\":6332:6350   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6325:6372   */\n      mstore\n        /* \"#utility.yul\":6389:6407   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":1042:1128  require(tokenA.transferFrom(msg.sender, address(this), _amountA), \"Transfer A failed\") */\n      tag_122\n        /* \"#utility.yul\":6072:6413   */\n      jump\n        /* \"contracts/AmmExchange.sol\":1042:1128  require(tokenA.transferFrom(msg.sender, address(this), _amountA), \"Transfer A failed\") */\n    tag_156:\n        /* \"contracts/AmmExchange.sol\":1147:1203  tokenB.transferFrom(msg.sender, address(this), _amountB) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":1147:1153  tokenB */\n      immutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n        /* \"contracts/AmmExchange.sol\":1147:1166  tokenB.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/AmmExchange.sol\":1147:1203  tokenB.transferFrom(msg.sender, address(this), _amountB) */\n      tag_159\n      swap1\n        /* \"contracts/AmmExchange.sol\":1167:1177  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":1187:1191  this */\n      address\n      swap1\n        /* \"contracts/AmmExchange.sol\":1194:1202  _amountB */\n      dup8\n      swap1\n        /* \"contracts/AmmExchange.sol\":1147:1203  tokenB.transferFrom(msg.sender, address(this), _amountB) */\n      0x04\n      add\n      tag_152\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_162:\n        /* \"contracts/AmmExchange.sol\":1139:1225  require(tokenB.transferFrom(msg.sender, address(this), _amountB), \"Transfer B failed\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6620:6622   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":1139:1225  require(tokenB.transferFrom(msg.sender, address(this), _amountB), \"Transfer B failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6602:6623   */\n      mstore\n        /* \"#utility.yul\":6659:6661   */\n      0x11\n        /* \"#utility.yul\":6639:6657   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6632:6662   */\n      mstore\n      shl(0x7a, 0x151c985b9cd9995c88108819985a5b1959)\n        /* \"#utility.yul\":6678:6696   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6671:6718   */\n      mstore\n        /* \"#utility.yul\":6735:6753   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":1139:1225  require(tokenB.transferFrom(msg.sender, address(this), _amountB), \"Transfer B failed\") */\n      tag_122\n        /* \"#utility.yul\":6418:6759   */\n      jump\n        /* \"contracts/AmmExchange.sol\":1139:1225  require(tokenB.transferFrom(msg.sender, address(this), _amountB), \"Transfer B failed\") */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"contracts/AmmExchange.sol\":1298:1299  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":1281:1299  totalSupply() == 0 */\n      sub\n        /* \"contracts/AmmExchange.sol\":1277:1576  if (totalSupply() == 0) {... */\n      tag_167\n      jumpi\n      pop\n        /* \"contracts/AmmExchange.sol\":1417:1425  _amountA */\n      dup2\n        /* \"contracts/AmmExchange.sol\":1277:1576  if (totalSupply() == 0) {... */\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/AmmExchange.sol\":1556:1564  reserveA */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"contracts/AmmExchange.sol\":1528:1552  _amountA * totalSupply() */\n      tag_170\n      swap1\n        /* \"contracts/AmmExchange.sol\":1528:1536  _amountA */\n      dup6\n        /* \"contracts/AmmExchange.sol\":1528:1552  _amountA * totalSupply() */\n      tag_126\n      jump\t// in\n    tag_170:\n        /* \"contracts/AmmExchange.sol\":1527:1564  (_amountA * totalSupply()) / reserveA */\n      tag_171\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_171:\n        /* \"contracts/AmmExchange.sol\":1515:1564  liquidity = (_amountA * totalSupply()) / reserveA */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":1277:1576  if (totalSupply() == 0) {... */\n    tag_168:\n        /* \"contracts/AmmExchange.sol\":1608:1609  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":1596:1605  liquidity */\n      dup2\n        /* \"contracts/AmmExchange.sol\":1596:1609  liquidity > 0 */\n      gt\n        /* \"contracts/AmmExchange.sol\":1588:1643  require(liquidity > 0, \"Insufficient liquidity minted\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":1588:1643  require(liquidity > 0, \"Insufficient liquidity minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6948:6969   */\n      mstore\n        /* \"#utility.yul\":7005:7007   */\n      0x1d\n        /* \"#utility.yul\":6985:7003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6978:7008   */\n      mstore\n        /* \"#utility.yul\":7044:7075   */\n      0x496e73756666696369656e74206c6971756964697479206d696e746564000000\n        /* \"#utility.yul\":7024:7042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7017:7076   */\n      mstore\n        /* \"#utility.yul\":7093:7111   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":1588:1643  require(liquidity > 0, \"Insufficient liquidity minted\") */\n      tag_122\n        /* \"#utility.yul\":6764:7117   */\n      jump\n        /* \"contracts/AmmExchange.sol\":1588:1643  require(liquidity > 0, \"Insufficient liquidity minted\") */\n    tag_172:\n        /* \"contracts/AmmExchange.sol\":1654:1682  _mint(msg.sender, liquidity) */\n      tag_175\n        /* \"contracts/AmmExchange.sol\":1660:1670  msg.sender */\n      caller\n        /* \"contracts/AmmExchange.sol\":1672:1681  liquidity */\n      dup3\n        /* \"contracts/AmmExchange.sol\":1654:1659  _mint */\n      tag_176\n        /* \"contracts/AmmExchange.sol\":1654:1682  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/AmmExchange.sol\":1735:1743  _amountA */\n      dup3\n        /* \"contracts/AmmExchange.sol\":1723:1731  reserveA */\n      0x05\n      0x00\n        /* \"contracts/AmmExchange.sol\":1723:1743  reserveA += _amountA */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":1766:1774  _amountB */\n      dup2\n        /* \"contracts/AmmExchange.sol\":1754:1762  reserveB */\n      0x06\n      0x00\n        /* \"contracts/AmmExchange.sol\":1754:1774  reserveB += _amountB */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_179:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":861:1782  function addLiquidity(uint256 _amountA, uint256 _amountB) public returns (uint256 liquidity) {... */\n      swap1\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/AmmExchange.sol\":2615:3952  function swap(address _tokenIn, uint256 _amountIn) public returns (uint256 amountOut) {... */\n    tag_82:\n        /* \"contracts/AmmExchange.sol\":2682:2699  uint256 amountOut */\n      0x00\n        /* \"contracts/AmmExchange.sol\":2740:2746  tokenA */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2720:2747  _tokenIn == address(tokenA) */\n      and\n        /* \"contracts/AmmExchange.sol\":2720:2728  _tokenIn */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2720:2747  _tokenIn == address(tokenA) */\n      and\n      eq\n        /* \"contracts/AmmExchange.sol\":2720:2778  _tokenIn == address(tokenA) || _tokenIn == address(tokenB) */\n      dup1\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/AmmExchange.sol\":2771:2777  tokenB */\n      immutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2751:2778  _tokenIn == address(tokenB) */\n      and\n        /* \"contracts/AmmExchange.sol\":2751:2759  _tokenIn */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2751:2778  _tokenIn == address(tokenB) */\n      and\n      eq\n        /* \"contracts/AmmExchange.sol\":2720:2778  _tokenIn == address(tokenA) || _tokenIn == address(tokenB) */\n    tag_184:\n        /* \"contracts/AmmExchange.sol\":2712:2802  require(_tokenIn == address(tokenA) || _tokenIn == address(tokenB), \"Invalid input token\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7454:7456   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":2712:2802  require(_tokenIn == address(tokenA) || _tokenIn == address(tokenB), \"Invalid input token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7436:7457   */\n      mstore\n        /* \"#utility.yul\":7493:7495   */\n      0x13\n        /* \"#utility.yul\":7473:7491   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7466:7496   */\n      mstore\n      shl(0x69, 0x24b73b30b634b21034b7383aba103a37b5b2b7)\n        /* \"#utility.yul\":7512:7530   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7505:7554   */\n      mstore\n        /* \"#utility.yul\":7571:7589   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":2712:2802  require(_tokenIn == address(tokenA) || _tokenIn == address(tokenB), \"Invalid input token\") */\n      tag_122\n        /* \"#utility.yul\":7252:7595   */\n      jump\n        /* \"contracts/AmmExchange.sol\":2712:2802  require(_tokenIn == address(tokenA) || _tokenIn == address(tokenB), \"Invalid input token\") */\n    tag_185:\n        /* \"contracts/AmmExchange.sol\":2833:2834  0 */\n      0x00\n        /* \"contracts/AmmExchange.sol\":2821:2830  _amountIn */\n      dup3\n        /* \"contracts/AmmExchange.sol\":2821:2834  _amountIn > 0 */\n      gt\n        /* \"contracts/AmmExchange.sol\":2813:2865  require(_amountIn > 0, \"Amount in must be positive\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7802:7804   */\n      0x20\n        /* \"contracts/AmmExchange.sol\":2813:2865  require(_amountIn > 0, \"Amount in must be positive\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7784:7805   */\n      mstore\n        /* \"#utility.yul\":7841:7843   */\n      0x1a\n        /* \"#utility.yul\":7821:7839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7814:7844   */\n      mstore\n        /* \"#utility.yul\":7880:7908   */\n      0x416d6f756e7420696e206d75737420626520706f736974697665000000000000\n        /* \"#utility.yul\":7860:7878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7853:7909   */\n      mstore\n        /* \"#utility.yul\":7926:7944   */\n      0x64\n      add\n        /* \"contracts/AmmExchange.sol\":2813:2865  require(_amountIn > 0, \"Amount in must be positive\") */\n      tag_122\n        /* \"#utility.yul\":7600:7950   */\n      jump\n        /* \"contracts/AmmExchange.sol\":2813:2865  require(_amountIn > 0, \"Amount in must be positive\") */\n    tag_188:\n        /* \"contracts/AmmExchange.sol\":2926:2993  IERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":2926:2955  IERC20(_tokenIn).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/AmmExchange.sol\":2926:2993  IERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn) */\n      tag_191\n      swap1\n        /* \"contracts/AmmExchange.sol\":2956:2966  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":2976:2980  this */\n      address\n      swap1\n        /* \"contracts/AmmExchange.sol\":2983:2992  _amountIn */\n      dup8\n      swap1\n        /* \"contracts/AmmExchange.sol\":2926:2993  IERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn) */\n      0x04\n      add\n      tag_152\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_194:\n      pop\n        /* \"contracts/AmmExchange.sol\":3093:3116  uint256 amountInWithFee */\n      0x00\n        /* \"contracts/AmmExchange.sol\":3119:3134  _amountIn * 997 */\n      tag_195\n        /* \"contracts/AmmExchange.sol\":3119:3128  _amountIn */\n      dup4\n        /* \"contracts/AmmExchange.sol\":3131:3134  997 */\n      0x03e5\n        /* \"contracts/AmmExchange.sol\":3119:3134  _amountIn * 997 */\n      tag_126\n      jump\t// in\n    tag_195:\n        /* \"contracts/AmmExchange.sol\":3093:3134  uint256 amountInWithFee = _amountIn * 997 */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":3194:3200  tokenA */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":3174:3201  _tokenIn == address(tokenA) */\n      and\n        /* \"contracts/AmmExchange.sol\":3174:3182  _tokenIn */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":3174:3201  _tokenIn == address(tokenA) */\n      and\n      sub\n        /* \"contracts/AmmExchange.sol\":3170:3945  if (_tokenIn == address(tokenA)) { // User is swapping Token A for Token B... */\n      tag_196\n      jumpi\n        /* \"contracts/AmmExchange.sol\":3258:3275  uint256 numerator */\n      0x00\n        /* \"contracts/AmmExchange.sol\":3296:3304  reserveB */\n      sload(0x06)\n        /* \"contracts/AmmExchange.sol\":3278:3293  amountInWithFee */\n      dup3\n        /* \"contracts/AmmExchange.sol\":3278:3304  amountInWithFee * reserveB */\n      tag_197\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_197:\n        /* \"contracts/AmmExchange.sol\":3258:3304  uint256 numerator = amountInWithFee * reserveB */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":3319:3338  uint256 denominator */\n      0x00\n        /* \"contracts/AmmExchange.sol\":3361:3376  amountInWithFee */\n      dup3\n        /* \"contracts/AmmExchange.sol\":3342:3350  reserveA */\n      sload(0x05)\n        /* \"contracts/AmmExchange.sol\":3353:3357  1000 */\n      0x03e8\n        /* \"contracts/AmmExchange.sol\":3342:3357  reserveA * 1000 */\n      tag_198\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_198:\n        /* \"contracts/AmmExchange.sol\":3341:3376  (reserveA * 1000) + amountInWithFee */\n      tag_199\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_199:\n        /* \"contracts/AmmExchange.sol\":3319:3376  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":3403:3426  numerator / denominator */\n      tag_200\n        /* \"contracts/AmmExchange.sol\":3319:3376  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      dup2\n        /* \"contracts/AmmExchange.sol\":3403:3412  numerator */\n      dup4\n        /* \"contracts/AmmExchange.sol\":3403:3426  numerator / denominator */\n      tag_128\n      jump\t// in\n    tag_200:\n        /* \"contracts/AmmExchange.sol\":3391:3426  amountOut = numerator / denominator */\n      swap4\n      pop\n        /* \"contracts/AmmExchange.sol\":3467:3476  _amountIn */\n      dup5\n        /* \"contracts/AmmExchange.sol\":3455:3463  reserveA */\n      0x05\n      0x00\n        /* \"contracts/AmmExchange.sol\":3455:3476  reserveA += _amountIn */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":3503:3512  amountOut */\n      dup4\n        /* \"contracts/AmmExchange.sol\":3491:3499  reserveB */\n      0x06\n      0x00\n        /* \"contracts/AmmExchange.sol\":3491:3512  reserveB -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_202\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_202:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AmmExchange.sol\":3527:3565  tokenB.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":3527:3533  tokenB */\n      immutable(\"0xf7cd777c1c37c29af53ca944c4f85299ef255c4bda4754e5ba8570de0e121e29\")\n        /* \"contracts/AmmExchange.sol\":3527:3542  tokenB.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/AmmExchange.sol\":3527:3565  tokenB.transfer(msg.sender, amountOut) */\n      tag_203\n      swap1\n        /* \"contracts/AmmExchange.sol\":3543:3553  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":3555:3564  amountOut */\n      dup9\n      swap1\n        /* \"contracts/AmmExchange.sol\":3527:3565  tokenB.transfer(msg.sender, amountOut) */\n      0x04\n      add\n      tag_138\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_206:\n      pop\n        /* \"contracts/AmmExchange.sol\":3203:3577  { // User is swapping Token A for Token B... */\n      pop\n      pop\n        /* \"contracts/AmmExchange.sol\":3170:3945  if (_tokenIn == address(tokenA)) { // User is swapping Token A for Token B... */\n      jump(tag_207)\n    tag_196:\n        /* \"contracts/AmmExchange.sol\":3638:3655  uint256 numerator */\n      0x00\n        /* \"contracts/AmmExchange.sol\":3676:3684  reserveA */\n      sload(0x05)\n        /* \"contracts/AmmExchange.sol\":3658:3673  amountInWithFee */\n      dup3\n        /* \"contracts/AmmExchange.sol\":3658:3684  amountInWithFee * reserveA */\n      tag_208\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_208:\n        /* \"contracts/AmmExchange.sol\":3638:3684  uint256 numerator = amountInWithFee * reserveA */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":3699:3718  uint256 denominator */\n      0x00\n        /* \"contracts/AmmExchange.sol\":3741:3756  amountInWithFee */\n      dup3\n        /* \"contracts/AmmExchange.sol\":3722:3730  reserveB */\n      sload(0x06)\n        /* \"contracts/AmmExchange.sol\":3733:3737  1000 */\n      0x03e8\n        /* \"contracts/AmmExchange.sol\":3722:3737  reserveB * 1000 */\n      tag_209\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_209:\n        /* \"contracts/AmmExchange.sol\":3721:3756  (reserveB * 1000) + amountInWithFee */\n      tag_210\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_210:\n        /* \"contracts/AmmExchange.sol\":3699:3756  uint256 denominator = (reserveB * 1000) + amountInWithFee */\n      swap1\n      pop\n        /* \"contracts/AmmExchange.sol\":3783:3806  numerator / denominator */\n      tag_211\n        /* \"contracts/AmmExchange.sol\":3699:3756  uint256 denominator = (reserveB * 1000) + amountInWithFee */\n      dup2\n        /* \"contracts/AmmExchange.sol\":3783:3792  numerator */\n      dup4\n        /* \"contracts/AmmExchange.sol\":3783:3806  numerator / denominator */\n      tag_128\n      jump\t// in\n    tag_211:\n        /* \"contracts/AmmExchange.sol\":3771:3806  amountOut = numerator / denominator */\n      swap4\n      pop\n        /* \"contracts/AmmExchange.sol\":3835:3844  _amountIn */\n      dup5\n        /* \"contracts/AmmExchange.sol\":3823:3831  reserveB */\n      0x06\n      0x00\n        /* \"contracts/AmmExchange.sol\":3823:3844  reserveB += _amountIn */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AmmExchange.sol\":3871:3880  amountOut */\n      dup4\n        /* \"contracts/AmmExchange.sol\":3859:3867  reserveA */\n      0x05\n      0x00\n        /* \"contracts/AmmExchange.sol\":3859:3880  reserveA -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_213:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AmmExchange.sol\":3895:3933  tokenA.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AmmExchange.sol\":3895:3901  tokenA */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"contracts/AmmExchange.sol\":3895:3910  tokenA.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"contracts/AmmExchange.sol\":3895:3933  tokenA.transfer(msg.sender, amountOut) */\n      tag_214\n      swap1\n        /* \"contracts/AmmExchange.sol\":3911:3921  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AmmExchange.sol\":3923:3932  amountOut */\n      dup9\n      swap1\n        /* \"contracts/AmmExchange.sol\":3895:3933  tokenA.transfer(msg.sender, amountOut) */\n      0x04\n      add\n      tag_138\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_217:\n      pop\n        /* \"contracts/AmmExchange.sol\":3583:3945  { // User is swapping Token B for Token A... */\n      pop\n      pop\n        /* \"contracts/AmmExchange.sol\":3170:3945  if (_tokenIn == address(tokenA)) { // User is swapping Token A for Token B... */\n    tag_207:\n        /* \"contracts/AmmExchange.sol\":2701:3952  {... */\n      pop\n        /* \"contracts/AmmExchange.sol\":2615:3952  function swap(address _tokenIn, uint256 _amountIn) public returns (uint256 amountOut) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_252\n      swap2\n        /* \"#utility.yul\":1733:1758   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1706:1724   */\n      add\n      swap1\n        /* \"#utility.yul\":1587:1764   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_255\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_255:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_256\n      swap1\n      pop\n      jump\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_260)\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_261\n      swap2\n        /* \"#utility.yul\":1733:1758   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1706:1724   */\n      add\n      swap1\n        /* \"#utility.yul\":1587:1764   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_24:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:863   */\n    tag_262:\n        /* \"#utility.yul\":758:778   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":807:838   */\n      dup2\n      and\n        /* \"#utility.yul\":797:839   */\n      dup2\n      eq\n        /* \"#utility.yul\":787:857   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":850:851   */\n      0x00\n        /* \"#utility.yul\":843:855   */\n      revert\n        /* \"#utility.yul\":787:857   */\n    tag_268:\n        /* \"#utility.yul\":690:863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":868:1168   */\n    tag_31:\n        /* \"#utility.yul\":936:942   */\n      0x00\n        /* \"#utility.yul\":944:950   */\n      0x00\n        /* \"#utility.yul\":997:999   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup4\n        /* \"#utility.yul\":976:983   */\n      dup6\n        /* \"#utility.yul\":972:995   */\n      sub\n        /* \"#utility.yul\":968:1000   */\n      slt\n        /* \"#utility.yul\":965:1017   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1013:1014   */\n      0x00\n        /* \"#utility.yul\":1010:1011   */\n      0x00\n        /* \"#utility.yul\":1003:1015   */\n      revert\n        /* \"#utility.yul\":965:1017   */\n    tag_270:\n        /* \"#utility.yul\":1036:1065   */\n      tag_271\n        /* \"#utility.yul\":1055:1064   */\n      dup4\n        /* \"#utility.yul\":1036:1065   */\n      tag_262\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1026:1065   */\n      swap5\n        /* \"#utility.yul\":1134:1136   */\n      0x20\n        /* \"#utility.yul\":1119:1137   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1106:1138   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":868:1168   */\n      jump\t// out\n        /* \"#utility.yul\":1365:1582   */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1543:1575   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1525:1576   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1513:1515   */\n      0x20\n        /* \"#utility.yul\":1498:1516   */\n      add\n      swap1\n        /* \"#utility.yul\":1365:1582   */\n      jump\t// out\n        /* \"#utility.yul\":1769:2143   */\n    tag_48:\n        /* \"#utility.yul\":1846:1852   */\n      0x00\n        /* \"#utility.yul\":1854:1860   */\n      0x00\n        /* \"#utility.yul\":1862:1868   */\n      0x00\n        /* \"#utility.yul\":1915:1917   */\n      0x60\n        /* \"#utility.yul\":1903:1912   */\n      dup5\n        /* \"#utility.yul\":1894:1901   */\n      dup7\n        /* \"#utility.yul\":1890:1913   */\n      sub\n        /* \"#utility.yul\":1886:1918   */\n      slt\n        /* \"#utility.yul\":1883:1935   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1931:1932   */\n      0x00\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1921:1933   */\n      revert\n        /* \"#utility.yul\":1883:1935   */\n    tag_276:\n        /* \"#utility.yul\":1954:1983   */\n      tag_277\n        /* \"#utility.yul\":1973:1982   */\n      dup5\n        /* \"#utility.yul\":1954:1983   */\n      tag_262\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1944:1983   */\n      swap3\n      pop\n        /* \"#utility.yul\":2002:2040   */\n      tag_278\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2025:2034   */\n      dup6\n        /* \"#utility.yul\":2021:2039   */\n      add\n        /* \"#utility.yul\":2002:2040   */\n      tag_262\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1769:2143   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1992:2040   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2109:2111   */\n      0x40\n        /* \"#utility.yul\":2094:2112   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2081:2113   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1769:2143   */\n      jump\t// out\n        /* \"#utility.yul\":2337:2523   */\n    tag_60:\n        /* \"#utility.yul\":2396:2402   */\n      0x00\n        /* \"#utility.yul\":2449:2451   */\n      0x20\n        /* \"#utility.yul\":2437:2446   */\n      dup3\n        /* \"#utility.yul\":2428:2435   */\n      dup5\n        /* \"#utility.yul\":2424:2447   */\n      sub\n        /* \"#utility.yul\":2420:2452   */\n      slt\n        /* \"#utility.yul\":2417:2469   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2465:2466   */\n      0x00\n        /* \"#utility.yul\":2462:2463   */\n      0x00\n        /* \"#utility.yul\":2455:2467   */\n      revert\n        /* \"#utility.yul\":2417:2469   */\n    tag_281:\n        /* \"#utility.yul\":2488:2517   */\n      tag_282\n        /* \"#utility.yul\":2507:2516   */\n      dup3\n        /* \"#utility.yul\":2488:2517   */\n      tag_262\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2478:2517   */\n      swap4\n        /* \"#utility.yul\":2337:2523   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2528:2754   */\n    tag_68:\n        /* \"#utility.yul\":2587:2593   */\n      0x00\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"#utility.yul\":2628:2637   */\n      dup3\n        /* \"#utility.yul\":2619:2626   */\n      dup5\n        /* \"#utility.yul\":2615:2638   */\n      sub\n        /* \"#utility.yul\":2611:2643   */\n      slt\n        /* \"#utility.yul\":2608:2660   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2653:2654   */\n      0x00\n        /* \"#utility.yul\":2646:2658   */\n      revert\n        /* \"#utility.yul\":2608:2660   */\n    tag_284:\n      pop\n        /* \"#utility.yul\":2701:2724   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2528:2754   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:3105   */\n    tag_73:\n        /* \"#utility.yul\":2827:2833   */\n      0x00\n        /* \"#utility.yul\":2835:2841   */\n      0x00\n        /* \"#utility.yul\":2888:2890   */\n      0x40\n        /* \"#utility.yul\":2876:2885   */\n      dup4\n        /* \"#utility.yul\":2867:2874   */\n      dup6\n        /* \"#utility.yul\":2863:2886   */\n      sub\n        /* \"#utility.yul\":2859:2891   */\n      slt\n        /* \"#utility.yul\":2856:2908   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2906   */\n      revert\n        /* \"#utility.yul\":2856:2908   */\n    tag_286:\n      pop\n      pop\n        /* \"#utility.yul\":2949:2972   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3069:3071   */\n      0x20\n        /* \"#utility.yul\":3054:3072   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3041:3073   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2759:3105   */\n      jump\t// out\n        /* \"#utility.yul\":3110:3370   */\n    tag_89:\n        /* \"#utility.yul\":3178:3184   */\n      0x00\n        /* \"#utility.yul\":3186:3192   */\n      0x00\n        /* \"#utility.yul\":3239:3241   */\n      0x40\n        /* \"#utility.yul\":3227:3236   */\n      dup4\n        /* \"#utility.yul\":3218:3225   */\n      dup6\n        /* \"#utility.yul\":3214:3237   */\n      sub\n        /* \"#utility.yul\":3210:3242   */\n      slt\n        /* \"#utility.yul\":3207:3259   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3252:3253   */\n      0x00\n        /* \"#utility.yul\":3245:3257   */\n      revert\n        /* \"#utility.yul\":3207:3259   */\n    tag_288:\n        /* \"#utility.yul\":3278:3307   */\n      tag_289\n        /* \"#utility.yul\":3297:3306   */\n      dup4\n        /* \"#utility.yul\":3278:3307   */\n      tag_262\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3268:3307   */\n      swap2\n      pop\n        /* \"#utility.yul\":3326:3364   */\n      tag_290\n        /* \"#utility.yul\":3360:3362   */\n      0x20\n        /* \"#utility.yul\":3349:3358   */\n      dup5\n        /* \"#utility.yul\":3345:3363   */\n      add\n        /* \"#utility.yul\":3326:3364   */\n      tag_262\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3316:3364   */\n      swap1\n      pop\n        /* \"#utility.yul\":3110:3370   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3755   */\n    tag_94:\n        /* \"#utility.yul\":3454:3455   */\n      0x01\n        /* \"#utility.yul\":3450:3462   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3497:3509   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3518:3579   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3572:3576   */\n      0x7f\n        /* \"#utility.yul\":3564:3570   */\n      dup3\n        /* \"#utility.yul\":3560:3577   */\n      and\n        /* \"#utility.yul\":3550:3577   */\n      swap2\n      pop\n        /* \"#utility.yul\":3518:3579   */\n    tag_292:\n        /* \"#utility.yul\":3625:3627   */\n      0x20\n        /* \"#utility.yul\":3617:3623   */\n      dup3\n        /* \"#utility.yul\":3614:3628   */\n      lt\n        /* \"#utility.yul\":3594:3612   */\n      dup2\n        /* \"#utility.yul\":3591:3629   */\n      sub\n        /* \"#utility.yul\":3588:3749   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3671:3681   */\n      0x4e487b71\n        /* \"#utility.yul\":3666:3669   */\n      0xe0\n        /* \"#utility.yul\":3662:3682   */\n      shl\n        /* \"#utility.yul\":3659:3660   */\n      0x00\n        /* \"#utility.yul\":3652:3683   */\n      mstore\n        /* \"#utility.yul\":3706:3710   */\n      0x22\n        /* \"#utility.yul\":3703:3704   */\n      0x04\n        /* \"#utility.yul\":3696:3711   */\n      mstore\n        /* \"#utility.yul\":3734:3738   */\n      0x24\n        /* \"#utility.yul\":3731:3732   */\n      0x00\n        /* \"#utility.yul\":3724:3739   */\n      revert\n        /* \"#utility.yul\":3588:3749   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":3375:3755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4114:4241   */\n    tag_263:\n        /* \"#utility.yul\":4175:4185   */\n      0x4e487b71\n        /* \"#utility.yul\":4170:4173   */\n      0xe0\n        /* \"#utility.yul\":4166:4186   */\n      shl\n        /* \"#utility.yul\":4163:4164   */\n      0x00\n        /* \"#utility.yul\":4156:4187   */\n      mstore\n        /* \"#utility.yul\":4206:4210   */\n      0x11\n        /* \"#utility.yul\":4203:4204   */\n      0x04\n        /* \"#utility.yul\":4196:4211   */\n      mstore\n        /* \"#utility.yul\":4230:4234   */\n      0x24\n        /* \"#utility.yul\":4227:4228   */\n      0x00\n        /* \"#utility.yul\":4220:4235   */\n      revert\n        /* \"#utility.yul\":4246:4414   */\n    tag_126:\n        /* \"#utility.yul\":4319:4328   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4350:4359   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4367:4382   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4361:4383   */\n      dup5\n      eq\n        /* \"#utility.yul\":4347:4384   */\n      or\n        /* \"#utility.yul\":4337:4408   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4388:4406   */\n      tag_100\n      tag_263\n      jump\t// in\n        /* \"#utility.yul\":4419:4636   */\n    tag_128:\n        /* \"#utility.yul\":4459:4460   */\n      0x00\n        /* \"#utility.yul\":4485:4486   */\n      dup3\n        /* \"#utility.yul\":4475:4607   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4529:4539   */\n      0x4e487b71\n        /* \"#utility.yul\":4524:4527   */\n      0xe0\n        /* \"#utility.yul\":4520:4540   */\n      shl\n        /* \"#utility.yul\":4517:4518   */\n      0x00\n        /* \"#utility.yul\":4510:4541   */\n      mstore\n        /* \"#utility.yul\":4564:4568   */\n      0x12\n        /* \"#utility.yul\":4561:4562   */\n      0x04\n        /* \"#utility.yul\":4554:4569   */\n      mstore\n        /* \"#utility.yul\":4592:4596   */\n      0x24\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4582:4597   */\n      revert\n        /* \"#utility.yul\":4475:4607   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":4621:4630   */\n      div\n      swap1\n        /* \"#utility.yul\":4419:4636   */\n      jump\t// out\n        /* \"#utility.yul\":5002:5276   */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5194:5226   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5176:5227   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5258:5260   */\n      0x20\n        /* \"#utility.yul\":5243:5261   */\n      dup3\n      add\n        /* \"#utility.yul\":5236:5270   */\n      mstore\n        /* \"#utility.yul\":5164:5166   */\n      0x40\n        /* \"#utility.yul\":5149:5167   */\n      add\n      swap1\n        /* \"#utility.yul\":5002:5276   */\n      jump\t// out\n        /* \"#utility.yul\":5281:5558   */\n    tag_142:\n        /* \"#utility.yul\":5348:5354   */\n      0x00\n        /* \"#utility.yul\":5401:5403   */\n      0x20\n        /* \"#utility.yul\":5389:5398   */\n      dup3\n        /* \"#utility.yul\":5380:5387   */\n      dup5\n        /* \"#utility.yul\":5376:5399   */\n      sub\n        /* \"#utility.yul\":5372:5404   */\n      slt\n        /* \"#utility.yul\":5369:5421   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5414:5415   */\n      0x00\n        /* \"#utility.yul\":5407:5419   */\n      revert\n        /* \"#utility.yul\":5369:5421   */\n    tag_304:\n        /* \"#utility.yul\":5449:5458   */\n      dup2\n        /* \"#utility.yul\":5443:5459   */\n      mload\n        /* \"#utility.yul\":5502:5507   */\n      dup1\n        /* \"#utility.yul\":5495:5508   */\n      iszero\n        /* \"#utility.yul\":5488:5509   */\n      iszero\n        /* \"#utility.yul\":5481:5486   */\n      dup2\n        /* \"#utility.yul\":5478:5510   */\n      eq\n        /* \"#utility.yul\":5468:5528   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5521:5522   */\n      0x00\n        /* \"#utility.yul\":5514:5526   */\n      revert\n        /* \"#utility.yul\":5563:5691   */\n    tag_148:\n        /* \"#utility.yul\":5630:5639   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5651:5662   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5648:5685   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":5665:5683   */\n      tag_100\n      tag_263\n      jump\t// in\n        /* \"#utility.yul\":5696:6067   */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5916:5948   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":5898:5949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5985:6017   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5980:5982   */\n      0x20\n        /* \"#utility.yul\":5965:5983   */\n      dup3\n      add\n        /* \"#utility.yul\":5958:6018   */\n      mstore\n        /* \"#utility.yul\":6049:6051   */\n      0x40\n        /* \"#utility.yul\":6034:6052   */\n      dup2\n      add\n        /* \"#utility.yul\":6027:6061   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5886:5888   */\n      0x60\n        /* \"#utility.yul\":5871:5889   */\n      add\n      swap1\n        /* \"#utility.yul\":5696:6067   */\n      jump\t// out\n        /* \"#utility.yul\":7122:7247   */\n    tag_178:\n        /* \"#utility.yul\":7187:7196   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7208:7218   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7205:7241   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":7221:7239   */\n      tag_100\n      tag_263\n      jump\t// in\n        /* \"#utility.yul\":7955:8300   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8175:8207   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8157:8208   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8239:8241   */\n      0x20\n        /* \"#utility.yul\":8224:8242   */\n      dup4\n      add\n        /* \"#utility.yul\":8217:8251   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8282:8284   */\n      0x40\n        /* \"#utility.yul\":8267:8285   */\n      dup3\n      add\n        /* \"#utility.yul\":8260:8294   */\n      mstore\n        /* \"#utility.yul\":8145:8147   */\n      0x60\n        /* \"#utility.yul\":8130:8148   */\n      add\n      swap1\n        /* \"#utility.yul\":7955:8300   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205bfc9a118b5306cc143a68ace2f9ab6bbfdaec3241a5482ea44c5217f7eff51a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_825": {
									"entryPoint": null,
									"id": 825,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3132:6",
										"nodeType": "YulBlock",
										"src": "0:3132:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											},
											{
												"body": {
													"nativeSrc": "526:95:6",
													"nodeType": "YulBlock",
													"src": "526:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "543:1:6",
																		"nodeType": "YulLiteral",
																		"src": "543:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "550:3:6",
																				"nodeType": "YulLiteral",
																				"src": "550:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:10:6",
																				"nodeType": "YulLiteral",
																				"src": "555:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:6"
																		},
																		"nativeSrc": "546:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:6"
																},
																"nativeSrc": "536:31:6",
																"nodeType": "YulFunctionCall",
																"src": "536:31:6"
															},
															"nativeSrc": "536:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "536:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "583:1:6",
																		"nodeType": "YulLiteral",
																		"src": "583:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:4:6",
																		"nodeType": "YulLiteral",
																		"src": "586:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:6"
																},
																"nativeSrc": "576:15:6",
																"nodeType": "YulFunctionCall",
																"src": "576:15:6"
															},
															"nativeSrc": "576:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "576:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "607:1:6",
																		"nodeType": "YulLiteral",
																		"src": "607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:4:6",
																		"nodeType": "YulLiteral",
																		"src": "610:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "600:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:6"
																},
																"nativeSrc": "600:15:6",
																"nodeType": "YulFunctionCall",
																"src": "600:15:6"
															},
															"nativeSrc": "600:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "600:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "494:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:6"
											},
											{
												"body": {
													"nativeSrc": "681:325:6",
													"nodeType": "YulBlock",
													"src": "681:325:6",
													"statements": [
														{
															"nativeSrc": "691:22:6",
															"nodeType": "YulAssignment",
															"src": "691:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "705:1:6",
																		"nodeType": "YulLiteral",
																		"src": "705:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "708:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "708:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "701:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:6"
																},
																"nativeSrc": "701:12:6",
																"nodeType": "YulFunctionCall",
																"src": "701:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "691:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:6"
																}
															]
														},
														{
															"nativeSrc": "722:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "722:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "752:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "752:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "758:1:6",
																		"nodeType": "YulLiteral",
																		"src": "758:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "748:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:6"
																},
																"nativeSrc": "748:12:6",
																"nodeType": "YulFunctionCall",
																"src": "748:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "726:18:6",
																	"nodeType": "YulTypedName",
																	"src": "726:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "799:31:6",
																"nodeType": "YulBlock",
																"src": "799:31:6",
																"statements": [
																	{
																		"nativeSrc": "801:27:6",
																		"nodeType": "YulAssignment",
																		"src": "801:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "815:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "823:4:6",
																					"nodeType": "YulLiteral",
																					"src": "823:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "811:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:3:6"
																			},
																			"nativeSrc": "811:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "811:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "801:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "779:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "779:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "772:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:6"
																},
																"nativeSrc": "772:26:6",
																"nodeType": "YulFunctionCall",
																"src": "772:26:6"
															},
															"nativeSrc": "769:61:6",
															"nodeType": "YulIf",
															"src": "769:61:6"
														},
														{
															"body": {
																"nativeSrc": "889:111:6",
																"nodeType": "YulBlock",
																"src": "889:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:6",
																					"nodeType": "YulLiteral",
																					"src": "910:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "917:3:6",
																							"nodeType": "YulLiteral",
																							"src": "917:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "922:10:6",
																							"nodeType": "YulLiteral",
																							"src": "922:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "913:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:6"
																					},
																					"nativeSrc": "913:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "913:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			},
																			"nativeSrc": "903:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "903:31:6"
																		},
																		"nativeSrc": "903:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:6",
																					"nodeType": "YulLiteral",
																					"src": "954:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:4:6",
																					"nodeType": "YulLiteral",
																					"src": "957:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "947:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:6"
																			},
																			"nativeSrc": "947:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "947:15:6"
																		},
																		"nativeSrc": "947:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "982:1:6",
																					"nodeType": "YulLiteral",
																					"src": "982:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "985:4:6",
																					"nodeType": "YulLiteral",
																					"src": "985:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "975:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:6"
																			},
																			"nativeSrc": "975:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "975:15:6"
																		},
																		"nativeSrc": "975:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "845:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "845:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "868:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "876:2:6",
																				"nodeType": "YulLiteral",
																				"src": "876:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "865:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "865:2:6"
																		},
																		"nativeSrc": "865:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "865:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "842:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "842:2:6"
																},
																"nativeSrc": "842:38:6",
																"nodeType": "YulFunctionCall",
																"src": "842:38:6"
															},
															"nativeSrc": "839:161:6",
															"nodeType": "YulIf",
															"src": "839:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "626:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "661:4:6",
														"nodeType": "YulTypedName",
														"src": "661:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "670:6:6",
														"nodeType": "YulTypedName",
														"src": "670:6:6",
														"type": ""
													}
												],
												"src": "626:380:6"
											},
											{
												"body": {
													"nativeSrc": "1067:65:6",
													"nodeType": "YulBlock",
													"src": "1067:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1084:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1084:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1087:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1077:6:6"
																},
																"nativeSrc": "1077:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1077:14:6"
															},
															"nativeSrc": "1077:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1077:14:6"
														},
														{
															"nativeSrc": "1100:26:6",
															"nodeType": "YulAssignment",
															"src": "1100:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1108:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1108:9:6"
																},
																"nativeSrc": "1108:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1108:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1100:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1011:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:6",
														"nodeType": "YulTypedName",
														"src": "1050:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1058:4:6",
														"nodeType": "YulTypedName",
														"src": "1058:4:6",
														"type": ""
													}
												],
												"src": "1011:121:6"
											},
											{
												"body": {
													"nativeSrc": "1218:437:6",
													"nodeType": "YulBlock",
													"src": "1218:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1251:398:6",
																"nodeType": "YulBlock",
																"src": "1251:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1272:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1275:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1275:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1265:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:6"
																			},
																			"nativeSrc": "1265:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1265:16:6"
																		},
																		"nativeSrc": "1265:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:16:6"
																	},
																	{
																		"nativeSrc": "1294:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1294:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1319:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1319:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1306:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:6"
																			},
																			"nativeSrc": "1306:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1298:4:6",
																				"nodeType": "YulTypedName",
																				"src": "1298:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1337:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1337:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1360:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1360:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1370:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1370:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1377:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1377:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1389:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1389:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1373:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1373:3:6"
																							},
																							"nativeSrc": "1373:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1373:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1366:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1366:3:6"
																					},
																					"nativeSrc": "1366:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1366:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1356:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1356:3:6"
																			},
																			"nativeSrc": "1356:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1341:11:6",
																				"nodeType": "YulTypedName",
																				"src": "1341:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1431:23:6",
																			"nodeType": "YulBlock",
																			"src": "1431:23:6",
																			"statements": [
																				{
																					"nativeSrc": "1433:19:6",
																					"nodeType": "YulAssignment",
																					"src": "1433:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1448:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1448:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1433:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "1433:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1413:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "1413:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1425:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1410:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1410:2:6"
																			},
																			"nativeSrc": "1410:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:20:6"
																		},
																		"nativeSrc": "1407:47:6",
																		"nodeType": "YulIf",
																		"src": "1407:47:6"
																	},
																	{
																		"nativeSrc": "1467:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1467:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1481:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1481:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1491:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1491:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1498:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1498:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1503:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1503:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1494:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1494:3:6"
																							},
																							"nativeSrc": "1494:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1494:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1487:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1487:3:6"
																					},
																					"nativeSrc": "1487:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1487:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1477:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1477:3:6"
																			},
																			"nativeSrc": "1477:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1477:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1471:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1471:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1521:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1521:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1534:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1534:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1525:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1525:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1619:20:6",
																			"nodeType": "YulBlock",
																			"src": "1619:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1628:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1628:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1635:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1635:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1621:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1621:6:6"
																						},
																						"nativeSrc": "1621:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1621:16:6"
																					},
																					"nativeSrc": "1621:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1621:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1569:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1569:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1576:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1576:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1566:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:6"
																			},
																			"nativeSrc": "1566:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1566:13:6"
																		},
																		"nativeSrc": "1558:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1580:26:6",
																			"nodeType": "YulBlock",
																			"src": "1580:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1582:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1582:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1595:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1595:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1602:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1602:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1591:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:6"
																						},
																						"nativeSrc": "1591:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1582:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1582:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1562:3:6",
																			"nodeType": "YulBlock",
																			"src": "1562:3:6",
																			"statements": []
																		},
																		"src": "1558:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1234:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1231:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:6"
																},
																"nativeSrc": "1231:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:11:6"
															},
															"nativeSrc": "1228:421:6",
															"nodeType": "YulIf",
															"src": "1228:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1137:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1190:5:6",
														"nodeType": "YulTypedName",
														"src": "1190:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1197:3:6",
														"nodeType": "YulTypedName",
														"src": "1197:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1202:10:6",
														"nodeType": "YulTypedName",
														"src": "1202:10:6",
														"type": ""
													}
												],
												"src": "1137:518:6"
											},
											{
												"body": {
													"nativeSrc": "1745:81:6",
													"nodeType": "YulBlock",
													"src": "1745:81:6",
													"statements": [
														{
															"nativeSrc": "1755:65:6",
															"nodeType": "YulAssignment",
															"src": "1755:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1770:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1770:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1788:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1788:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1791:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1791:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1784:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1784:3:6"
																								},
																								"nativeSrc": "1784:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1784:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1801:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1801:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1797:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1797:3:6"
																								},
																								"nativeSrc": "1797:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1797:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1780:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:6"
																						},
																						"nativeSrc": "1780:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1776:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:6"
																				},
																				"nativeSrc": "1776:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1766:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:6"
																		},
																		"nativeSrc": "1766:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1815:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1815:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:6"
																		},
																		"nativeSrc": "1808:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1763:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:6"
																},
																"nativeSrc": "1763:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1763:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1755:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1660:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1722:4:6",
														"nodeType": "YulTypedName",
														"src": "1722:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1728:3:6",
														"nodeType": "YulTypedName",
														"src": "1728:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1736:4:6",
														"nodeType": "YulTypedName",
														"src": "1736:4:6",
														"type": ""
													}
												],
												"src": "1660:166:6"
											},
											{
												"body": {
													"nativeSrc": "1927:1203:6",
													"nodeType": "YulBlock",
													"src": "1927:1203:6",
													"statements": [
														{
															"nativeSrc": "1937:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1937:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1957:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1951:5:6"
																},
																"nativeSrc": "1951:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1951:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1941:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1941:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:22:6",
																"nodeType": "YulBlock",
																"src": "2004:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2006:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2006:16:6"
																			},
																			"nativeSrc": "2006:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2006:18:6"
																		},
																		"nativeSrc": "2006:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2006:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1992:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1992:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1996:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1996:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1988:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:6"
																				},
																				"nativeSrc": "1988:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1988:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2000:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:6"
																		},
																		"nativeSrc": "1984:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1973:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1973:2:6"
																},
																"nativeSrc": "1973:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1973:30:6"
															},
															"nativeSrc": "1970:56:6",
															"nodeType": "YulIf",
															"src": "1970:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2079:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2079:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2117:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2117:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2111:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2111:5:6"
																				},
																				"nativeSrc": "2111:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2085:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "2085:25:6"
																		},
																		"nativeSrc": "2085:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2035:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2035:43:6"
																},
																"nativeSrc": "2035:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2035:97:6"
															},
															"nativeSrc": "2035:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2035:97:6"
														},
														{
															"nativeSrc": "2141:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2141:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2158:1:6",
																"nodeType": "YulLiteral",
																"src": "2158:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2145:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2145:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2168:17:6",
															"nodeType": "YulAssignment",
															"src": "2168:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2181:4:6",
																"nodeType": "YulLiteral",
																"src": "2181:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2168:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2168:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2231:642:6",
																		"nodeType": "YulBlock",
																		"src": "2231:642:6",
																		"statements": [
																			{
																				"nativeSrc": "2245:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2245:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2264:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2264:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2276:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2276:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2272:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2272:3:6"
																							},
																							"nativeSrc": "2272:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2272:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2260:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:6"
																					},
																					"nativeSrc": "2260:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2249:7:6",
																						"nodeType": "YulTypedName",
																						"src": "2249:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2293:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2293:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2337:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2337:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2307:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "2307:29:6"
																					},
																					"nativeSrc": "2307:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2307:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2297:6:6",
																						"nodeType": "YulTypedName",
																						"src": "2297:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2355:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2355:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2364:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2359:1:6",
																						"nodeType": "YulTypedName",
																						"src": "2359:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2435:165:6",
																					"nodeType": "YulBlock",
																					"src": "2435:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2460:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2460:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2478:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2478:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2483:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2483:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2474:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2474:3:6"
																												},
																												"nativeSrc": "2474:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2474:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2468:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2468:5:6"
																										},
																										"nativeSrc": "2468:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2468:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2453:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2453:6:6"
																								},
																								"nativeSrc": "2453:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2453:42:6"
																							},
																							"nativeSrc": "2453:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2453:42:6"
																						},
																						{
																							"nativeSrc": "2512:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2512:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2526:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2526:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2534:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2534:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2522:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:6"
																								},
																								"nativeSrc": "2522:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2522:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2512:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2512:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2553:33:6",
																							"nodeType": "YulAssignment",
																							"src": "2553:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2570:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2570:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2581:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2581:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2566:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:6"
																								},
																								"nativeSrc": "2566:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2566:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2553:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2553:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2389:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "2389:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2392:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2392:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2386:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:6"
																					},
																					"nativeSrc": "2386:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2386:14:6"
																				},
																				"nativeSrc": "2378:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2401:21:6",
																					"nodeType": "YulBlock",
																					"src": "2401:21:6",
																					"statements": [
																						{
																							"nativeSrc": "2403:17:6",
																							"nodeType": "YulAssignment",
																							"src": "2403:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2412:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "2412:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2415:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2415:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2408:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2408:3:6"
																								},
																								"nativeSrc": "2408:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2408:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2403:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "2403:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2382:3:6",
																					"nodeType": "YulBlock",
																					"src": "2382:3:6",
																					"statements": []
																				},
																				"src": "2378:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2648:166:6",
																					"nodeType": "YulBlock",
																					"src": "2648:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2666:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2666:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2693:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2693:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2698:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2698:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2689:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2689:3:6"
																										},
																										"nativeSrc": "2689:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2689:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2683:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2683:5:6"
																								},
																								"nativeSrc": "2683:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2683:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2670:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2670:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2733:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2733:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2745:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2745:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2772:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2772:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2775:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2775:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2768:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2768:3:6"
																																		},
																																		"nativeSrc": "2768:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2768:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2784:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2784:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2764:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2764:3:6"
																																},
																																"nativeSrc": "2764:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2764:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2794:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2794:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2790:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2790:3:6"
																																},
																																"nativeSrc": "2790:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2790:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2760:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2760:3:6"
																														},
																														"nativeSrc": "2760:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2760:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2756:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2756:3:6"
																												},
																												"nativeSrc": "2756:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2756:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2741:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:6"
																										},
																										"nativeSrc": "2741:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2726:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2726:6:6"
																								},
																								"nativeSrc": "2726:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2726:74:6"
																							},
																							"nativeSrc": "2726:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2726:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2619:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2619:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2628:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2628:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2616:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2616:2:6"
																					},
																					"nativeSrc": "2616:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2616:19:6"
																				},
																				"nativeSrc": "2613:201:6",
																				"nodeType": "YulIf",
																				"src": "2613:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2834:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2834:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2848:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2848:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2851:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2851:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2844:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2844:3:6"
																									},
																									"nativeSrc": "2844:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2844:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2860:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2860:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2840:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2840:3:6"
																							},
																							"nativeSrc": "2840:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2840:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2827:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2827:6:6"
																					},
																					"nativeSrc": "2827:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2827:36:6"
																				},
																				"nativeSrc": "2827:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2827:36:6"
																			}
																		]
																	},
																	"nativeSrc": "2224:649:6",
																	"nodeType": "YulCase",
																	"src": "2224:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2229:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2890:234:6",
																		"nodeType": "YulBlock",
																		"src": "2890:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2904:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2904:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2917:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2917:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2908:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2908:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2953:67:6",
																					"nodeType": "YulBlock",
																					"src": "2953:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2971:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2971:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2990:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2990:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2995:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2995:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2986:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2986:3:6"
																										},
																										"nativeSrc": "2986:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2986:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2980:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2980:5:6"
																								},
																								"nativeSrc": "2980:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2980:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2971:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2971:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2934:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2934:6:6"
																				},
																				"nativeSrc": "2931:89:6",
																				"nodeType": "YulIf",
																				"src": "2931:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3040:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3040:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3099:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3099:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3106:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3106:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3046:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "3046:52:6"
																							},
																							"nativeSrc": "3046:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3046:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3033:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3033:6:6"
																					},
																					"nativeSrc": "3033:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3033:81:6"
																				},
																				"nativeSrc": "3033:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3033:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2882:242:6",
																	"nodeType": "YulCase",
																	"src": "2882:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2204:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2201:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:6"
																},
																"nativeSrc": "2201:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2201:14:6"
															},
															"nativeSrc": "2194:930:6",
															"nodeType": "YulSwitch",
															"src": "2194:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1831:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1912:4:6",
														"nodeType": "YulTypedName",
														"src": "1912:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1918:3:6",
														"nodeType": "YulTypedName",
														"src": "1918:3:6",
														"type": ""
													}
												],
												"src": "1831:1299:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b5060405161145138038061145183398101604081905261002e916100c3565b6040518060400160405280600d81526020016c20b5b4b7102628102a37b5b2b760991b815250604051806040016040528060058152602001640414b2d4c560dc1b8152508160039081610081919061018c565b50600461008e828261018c565b5050506001600160a01b039182166080521660a052610246565b80516001600160a01b03811681146100be575f5ffd5b919050565b5f5f604083850312156100d4575f5ffd5b6100dd836100a8565b91506100eb602084016100a8565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061011c57607f821691505b60208210810361013a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018757805f5260205f20601f840160051c810160208510156101655750805b601f840160051c820191505b81811015610184575f8155600101610171565b50505b505050565b81516001600160401b038111156101a5576101a56100f4565b6101b9816101b38454610108565b84610140565b6020601f8211600181146101eb575f83156101d45750848201515b5f19600385901b1c1916600184901b178455610184565b5f84815260208120601f198516915b8281101561021a57878501518255602094850194600190920191016101fa565b508482101561023757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b60805160a0516111ab6102a65f395f81816101bf015281816104f201528181610689015281816108480152610a4601525f818161014e01528181610463015281816105b90152818161080d0152818161098f0152610b4501526111ab5ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80635f64b55b1161008f5780635f64b55b146101ba57806370a08231146101e157806395d89b41146102095780639c8f9f23146102115780639cd441da14610224578063a9059cbb14610237578063d004f0f71461024a578063dc5fa6c51461025d578063dd62ed3e14610266575f5ffd5b806306fdde03146100ec5780630902f1ac1461010a578063095ea7b3146101265780630fc63d101461014957806318160ddd1461017d57806319e36f3b1461018f57806323b872dd14610198578063313ce567146101ab575b5f5ffd5b6100f4610279565b6040516101019190610f02565b60405180910390f35b6005546006545b60408051928352602083019190915201610101565b610139610134366004610f52565b610309565b6040519015158152602001610101565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516101019190610f7a565b6002545b604051908152602001610101565b61018160065481565b6101396101a6366004610f8e565b610322565b60405160128152602001610101565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6101816101ef366004610fc8565b6001600160a01b03165f9081526020819052604090205490565b6100f4610345565b61011161021f366004610fe8565b610354565b610181610232366004610fff565b6105a0565b610139610245366004610f52565b6107fd565b610181610258366004610f52565b61080a565b61018160055481565b61018161027436600461101f565b610bc7565b60606003805461028890611050565b80601f01602080910402602001604051908101604052809291908181526020018280546102b490611050565b80156102ff5780601f106102d6576101008083540402835291602001916102ff565b820191905f5260205f20905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b5f33610316818585610bf1565b60019150505b92915050565b5f3361032f858285610c03565b61033a858585610c54565b506001949350505050565b60606004805461028890611050565b5f5f5f83116103a65760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742072656d6f76652030206c697175696469747960381b60448201526064015b60405180910390fd5b5f6103b060025490565b905080846005546103c1919061109c565b6103cb91906110b3565b925080846006546103dc919061109c565b6103e691906110b3565b91505f831180156103f657505f82115b6104425760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616d6f756e747320746f207769746864726177604482015260640161039d565b61044c3385610cb1565b60405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061049a90339087906004016110d2565b6020604051808303815f875af11580156104b6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104da91906110eb565b5060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061052990339086906004016110d2565b6020604051808303815f875af1158015610545573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056991906110eb565b508260055f82825461057b919061110a565b925050819055508160065f828254610593919061110a565b9250508190555050915091565b6040516323b872dd60e01b81525f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906105f29033903090889060040161111d565b6020604051808303815f875af115801561060e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063291906110eb565b6106725760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c88104819985a5b1959607a1b604482015260640161039d565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906106c29033903090879060040161111d565b6020604051808303815f875af11580156106de573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070291906110eb565b6107425760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c88108819985a5b1959607a1b604482015260640161039d565b6002545f0361075257508161076f565b600554600254610762908561109c565b61076c91906110b3565b90505b5f81116107be5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206d696e746564000000604482015260640161039d565b6107c83382610ce9565b8260055f8282546107d99190611141565b925050819055508160065f8282546107f19190611141565b90915550909392505050565b5f33610316818585610c54565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148061087c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b6108be5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21034b7383aba103a37b5b2b760691b604482015260640161039d565b5f821161090d5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e7420696e206d75737420626520706f736974697665000000000000604482015260640161039d565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061093d9033903090879060040161111d565b6020604051808303815f875af1158015610959573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097d91906110eb565b505f61098b836103e561109c565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b031603610ac5575f600654826109d5919061109c565b90505f826005546103e86109e9919061109c565b6109f39190611141565b90506109ff81836110b3565b93508460055f828254610a129190611141565b925050819055508360065f828254610a2a919061110a565b909155505060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610a7d90339088906004016110d2565b6020604051808303815f875af1158015610a99573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abd91906110eb565b505050610bc0565b5f60055482610ad4919061109c565b90505f826006546103e8610ae8919061109c565b610af29190611141565b9050610afe81836110b3565b93508460065f828254610b119190611141565b925050819055508360055f828254610b29919061110a565b909155505060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610b7c90339088906004016110d2565b6020604051808303815f875af1158015610b98573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbc91906110eb565b5050505b5092915050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610bfe8383836001610d1d565b505050565b5f610c0e8484610bc7565b90505f19811015610c4e5781811015610c4057828183604051637dc7a0d960e11b815260040161039d93929190611154565b610c4e84848484035f610d1d565b50505050565b6001600160a01b038316610c7d575f604051634b637e8f60e11b815260040161039d9190610f7a565b6001600160a01b038216610ca6575f60405163ec442f0560e01b815260040161039d9190610f7a565b610bfe838383610def565b6001600160a01b038216610cda575f604051634b637e8f60e11b815260040161039d9190610f7a565b610ce5825f83610def565b5050565b6001600160a01b038216610d12575f60405163ec442f0560e01b815260040161039d9190610f7a565b610ce55f8383610def565b6001600160a01b038416610d46575f60405163e602df0560e01b815260040161039d9190610f7a565b6001600160a01b038316610d6f575f604051634a1406b160e11b815260040161039d9190610f7a565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c4e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610de191815260200190565b60405180910390a350505050565b6001600160a01b038316610e19578060025f828254610e0e9190611141565b90915550610e769050565b6001600160a01b0383165f9081526020819052604090205481811015610e585783818360405163391434e360e21b815260040161039d93929190611154565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610e9257600280548290039055610eb0565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ef591815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610f4d575f5ffd5b919050565b5f5f60408385031215610f63575f5ffd5b610f6c83610f37565b946020939093013593505050565b6001600160a01b0391909116815260200190565b5f5f5f60608486031215610fa0575f5ffd5b610fa984610f37565b9250610fb760208501610f37565b929592945050506040919091013590565b5f60208284031215610fd8575f5ffd5b610fe182610f37565b9392505050565b5f60208284031215610ff8575f5ffd5b5035919050565b5f5f60408385031215611010575f5ffd5b50508035926020909101359150565b5f5f60408385031215611030575f5ffd5b61103983610f37565b915061104760208401610f37565b90509250929050565b600181811c9082168061106457607f821691505b60208210810361108257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761031c5761031c611088565b5f826110cd57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f602082840312156110fb575f5ffd5b81518015158114610fe1575f5ffd5b8181038181111561031c5761031c611088565b6001600160a01b039384168152919092166020820152604081019190915260600190565b8082018082111561031c5761031c611088565b6001600160a01b03939093168352602083019190915260408201526060019056fea26469706673582212205bfc9a118b5306cc143a68ace2f9ab6bbfdaec3241a5482ea44c5217f7eff51a64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1451 CODESIZE SUB DUP1 PUSH2 0x1451 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x20B5B4B7102628102A37B5B2B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x414B2D4C5 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8E DUP3 DUP3 PUSH2 0x18C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x246 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD DUP4 PUSH2 0xA8 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB PUSH1 0x20 DUP5 ADD PUSH2 0xA8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x187 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x165 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x184 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x171 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A5 JUMPI PUSH2 0x1A5 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x1B3 DUP5 SLOAD PUSH2 0x108 JUMP JUMPDEST DUP5 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EB JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1D4 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x184 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1FA JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x237 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x11AB PUSH2 0x2A6 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1BF ADD MSTORE DUP2 DUP2 PUSH2 0x4F2 ADD MSTORE DUP2 DUP2 PUSH2 0x689 ADD MSTORE DUP2 DUP2 PUSH2 0x848 ADD MSTORE PUSH2 0xA46 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x14E ADD MSTORE DUP2 DUP2 PUSH2 0x463 ADD MSTORE DUP2 DUP2 PUSH2 0x5B9 ADD MSTORE DUP2 DUP2 PUSH2 0x80D ADD MSTORE DUP2 DUP2 PUSH2 0x98F ADD MSTORE PUSH2 0xB45 ADD MSTORE PUSH2 0x11AB PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0x8F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x181 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH2 0x181 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x101F JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0x1050 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B4 SWAP1 PUSH2 0x1050 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x316 DUP2 DUP6 DUP6 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32F DUP6 DUP3 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x33A DUP6 DUP6 DUP6 PUSH2 0xC54 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x43616E6E6F742072656D6F76652030206C6971756964697479 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3B0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x5 SLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 POP DUP1 DUP5 PUSH1 0x6 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x3F6 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E747320746F207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x44C CALLER DUP6 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x49A SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x529 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x5F2 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C985B9CD9995C88104819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x6C2 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C985B9CD9995C88108819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x752 JUMPI POP DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH2 0x762 SWAP1 DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6971756964697479206D696E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x7C8 CALLER DUP3 PUSH2 0xCE9 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x316 DUP2 DUP6 DUP6 PUSH2 0xC54 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21034B7383ABA103A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420696E206D75737420626520706F736974697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x93D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP PUSH0 PUSH2 0x98B DUP4 PUSH2 0x3E5 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAC5 JUMPI PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FF DUP2 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xA7D SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP POP POP PUSH2 0xBC0 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD DUP3 PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x6 SLOAD PUSH2 0x3E8 PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH2 0xAFE DUP2 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xB7C SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBFE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC0E DUP5 DUP5 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC40 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0xC4E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC7D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xBFE DUP4 DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xCE5 DUP3 PUSH0 DUP4 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xCE5 PUSH0 DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD46 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC4E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDE1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE19 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE76 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE92 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEF5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF6C DUP4 PUSH2 0xF37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFA9 DUP5 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH2 0xFB7 PUSH1 0x20 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFE1 DUP3 PUSH2 0xF37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1010 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1039 DUP4 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH2 0x1047 PUSH1 0x20 DUP5 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1064 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1082 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xFC SWAP11 GT DUP12 MSTORE8 MOD 0xCC EQ GASPRICE PUSH9 0xACE2F9AB6BBFDAEC32 COINBASE 0xA5 BASEFEE 0x2E LOG4 0x4C MSTORE OR 0xF7 0xEF CREATE2 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "226:3729:5:-:0;;;476:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;565:24:5;;::::1;;::::0;600::::1;;::::0;226:3729;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:518::-;1239:2;1234:3;1231:11;1228:421;;;1275:5;1272:1;1265:16;1319:4;1316:1;1306:18;1389:2;1377:10;1373:19;1370:1;1366:27;1360:4;1356:38;1425:4;1413:10;1410:20;1407:47;;;-1:-1:-1;1448:4:6;1407:47;1503:2;1498:3;1494:12;1491:1;1487:20;1481:4;1477:31;1467:41;;1558:81;1576:2;1569:5;1566:13;1558:81;;;1635:1;1621:16;;1602:1;1591:13;1558:81;;;1562:3;;1228:421;1137:518;;;:::o;1831:1299::-;1951:10;;-1:-1:-1;;;;;1973:30:6;;1970:56;;;2006:18;;:::i;:::-;2035:97;2125:6;2085:38;2117:4;2111:11;2085:38;:::i;:::-;2079:4;2035:97;:::i;:::-;2181:4;2212:2;2201:14;;2229:1;2224:649;;;;2917:1;2934:6;2931:89;;;-1:-1:-1;2986:19:6;;;2980:26;2931:89;-1:-1:-1;;1788:1:6;1784:11;;;1780:24;1776:29;1766:40;1812:1;1808:11;;;1763:57;3033:81;;2194:930;;2224:649;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2260:20:6;;;2378:222;2392:7;2389:1;2386:14;2378:222;;;2474:19;;;2468:26;2453:42;;2581:4;2566:20;;;;2534:1;2522:14;;;;2408:12;2378:222;;;2382:3;2628:6;2619:7;2616:19;2613:201;;;2689:19;;;2683:26;-1:-1:-1;;2772:1:6;2768:14;;;2784:3;2764:24;2760:37;2756:42;2741:58;2726:74;;2613:201;-1:-1:-1;;;;2860:1:6;2844:14;;;2840:22;2827:36;;-1:-1:-1;1831:1299:6:o;:::-;226:3729:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 3057,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3357,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 3249,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 3305,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3075,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3156,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3567,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_917": {
									"entryPoint": 1440,
									"id": 917,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 3015,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 777,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReserves_837": {
									"entryPoint": null,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@name_197": {
									"entryPoint": 633,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_998": {
									"entryPoint": 852,
									"id": 998,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserveA_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_1134": {
									"entryPoint": 2058,
									"id": 1134,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 837,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenA_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_797": {
									"entryPoint": null,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 802,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2045,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f653d3b2f2097e41c35d308bc564aebe4f4884b6f793c5db2a9cdd5eca51622__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_853566487f2e621eab8c339b98dec3baa9bd207b1822aefec5a36c1dcbb67bd7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc05cf861e9a7afd75d3a07a27aab1251715454224f78199d63bde7a07d3e37a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9c7225611efcf9985316b9201ddc542c081cfa5a75cf93866b7ec8f68500689__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbefc1394a9663abb98c29509318d8f08d19ffc71ec61cf3b5ff3557905f4a7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6fe24d4d496c9aa03e79515e2b1d45390a780027b3e2e43b0558c23d6aacee7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8510:6",
										"nodeType": "YulBlock",
										"src": "0:8510:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:6",
													"nodeType": "YulBlock",
													"src": "135:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:6",
																		"nodeType": "YulLiteral",
																		"src": "163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:6"
																},
																"nativeSrc": "145:21:6",
																"nodeType": "YulFunctionCall",
																"src": "145:21:6"
															},
															"nativeSrc": "145:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:6"
														},
														{
															"nativeSrc": "175:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:6"
																},
																"nativeSrc": "189:13:6",
																"nodeType": "YulFunctionCall",
																"src": "189:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:6",
																	"nodeType": "YulTypedName",
																	"src": "179:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:6",
																				"nodeType": "YulLiteral",
																				"src": "233:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:6"
																		},
																		"nativeSrc": "218:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																},
																"nativeSrc": "211:34:6",
																"nodeType": "YulFunctionCall",
																"src": "211:34:6"
															},
															"nativeSrc": "211:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:6",
																				"nodeType": "YulLiteral",
																				"src": "275:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:6"
																		},
																		"nativeSrc": "260:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:6"
																		},
																		"nativeSrc": "280:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:6"
																},
																"nativeSrc": "254:50:6",
																"nodeType": "YulFunctionCall",
																"src": "254:50:6"
															},
															"nativeSrc": "254:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:6"
																				},
																				"nativeSrc": "324:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:6",
																				"nodeType": "YulLiteral",
																				"src": "348:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:6"
																		},
																		"nativeSrc": "320:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:6",
																		"nodeType": "YulLiteral",
																		"src": "353:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:6"
																},
																"nativeSrc": "313:42:6",
																"nodeType": "YulFunctionCall",
																"src": "313:42:6"
															},
															"nativeSrc": "313:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:6"
														},
														{
															"nativeSrc": "364:62:6",
															"nodeType": "YulAssignment",
															"src": "364:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:6",
																								"nodeType": "YulLiteral",
																								"src": "407:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:6"
																						},
																						"nativeSrc": "395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:6",
																								"nodeType": "YulLiteral",
																								"src": "416:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:6"
																						},
																						"nativeSrc": "412:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:6"
																				},
																				"nativeSrc": "391:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:6"
																		},
																		"nativeSrc": "376:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "423:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:6"
																},
																"nativeSrc": "372:54:6",
																"nodeType": "YulFunctionCall",
																"src": "372:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:418:6"
											},
											{
												"body": {
													"nativeSrc": "566:119:6",
													"nodeType": "YulBlock",
													"src": "566:119:6",
													"statements": [
														{
															"nativeSrc": "576:26:6",
															"nodeType": "YulAssignment",
															"src": "576:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "588:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "588:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "599:2:6",
																		"nodeType": "YulLiteral",
																		"src": "599:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "584:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:6"
																},
																"nativeSrc": "584:18:6",
																"nodeType": "YulFunctionCall",
																"src": "584:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "576:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "576:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "618:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "618:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "611:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:6"
																},
																"nativeSrc": "611:25:6",
																"nodeType": "YulFunctionCall",
																"src": "611:25:6"
															},
															"nativeSrc": "611:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "611:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:6",
																				"nodeType": "YulLiteral",
																				"src": "667:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "672:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "645:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:6"
																},
																"nativeSrc": "645:34:6",
																"nodeType": "YulFunctionCall",
																"src": "645:34:6"
															},
															"nativeSrc": "645:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "437:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "527:9:6",
														"nodeType": "YulTypedName",
														"src": "527:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "538:6:6",
														"nodeType": "YulTypedName",
														"src": "538:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "546:6:6",
														"nodeType": "YulTypedName",
														"src": "546:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "557:4:6",
														"nodeType": "YulTypedName",
														"src": "557:4:6",
														"type": ""
													}
												],
												"src": "437:248:6"
											},
											{
												"body": {
													"nativeSrc": "739:124:6",
													"nodeType": "YulBlock",
													"src": "739:124:6",
													"statements": [
														{
															"nativeSrc": "749:29:6",
															"nodeType": "YulAssignment",
															"src": "749:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "771:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "758:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:12:6"
																},
																"nativeSrc": "758:20:6",
																"nodeType": "YulFunctionCall",
																"src": "758:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "749:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "749:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "841:16:6",
																"nodeType": "YulBlock",
																"src": "841:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "850:1:6",
																					"nodeType": "YulLiteral",
																					"src": "850:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "853:1:6",
																					"nodeType": "YulLiteral",
																					"src": "853:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "843:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:6"
																			},
																			"nativeSrc": "843:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:6"
																		},
																		"nativeSrc": "843:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "800:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "800:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "811:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "811:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "826:3:6",
																										"nodeType": "YulLiteral",
																										"src": "826:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "831:1:6",
																										"nodeType": "YulLiteral",
																										"src": "831:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "822:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "822:3:6"
																								},
																								"nativeSrc": "822:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "822:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "835:1:6",
																								"nodeType": "YulLiteral",
																								"src": "835:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "818:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:6"
																						},
																						"nativeSrc": "818:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "818:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "807:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:6"
																				},
																				"nativeSrc": "807:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "807:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "797:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "797:2:6"
																		},
																		"nativeSrc": "797:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "797:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "790:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:6"
																},
																"nativeSrc": "790:50:6",
																"nodeType": "YulFunctionCall",
																"src": "790:50:6"
															},
															"nativeSrc": "787:70:6",
															"nodeType": "YulIf",
															"src": "787:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "690:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "718:6:6",
														"nodeType": "YulTypedName",
														"src": "718:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "729:5:6",
														"nodeType": "YulTypedName",
														"src": "729:5:6",
														"type": ""
													}
												],
												"src": "690:173:6"
											},
											{
												"body": {
													"nativeSrc": "955:213:6",
													"nodeType": "YulBlock",
													"src": "955:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1001:16:6",
																"nodeType": "YulBlock",
																"src": "1001:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1010:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1010:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1013:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1013:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1003:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1003:6:6"
																			},
																			"nativeSrc": "1003:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1003:12:6"
																		},
																		"nativeSrc": "1003:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "976:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "976:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "985:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "972:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "972:3:6"
																		},
																		"nativeSrc": "972:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "972:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "997:2:6",
																		"nodeType": "YulLiteral",
																		"src": "997:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:6"
																},
																"nativeSrc": "968:32:6",
																"nodeType": "YulFunctionCall",
																"src": "968:32:6"
															},
															"nativeSrc": "965:52:6",
															"nodeType": "YulIf",
															"src": "965:52:6"
														},
														{
															"nativeSrc": "1026:39:6",
															"nodeType": "YulAssignment",
															"src": "1026:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1055:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1036:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1036:18:6"
																},
																"nativeSrc": "1036:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1036:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1026:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:6"
																}
															]
														},
														{
															"nativeSrc": "1074:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1074:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1087:1:6",
																"nodeType": "YulLiteral",
																"src": "1087:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1078:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1078:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1097:41:6",
															"nodeType": "YulAssignment",
															"src": "1097:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1134:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1134:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1119:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:6"
																		},
																		"nativeSrc": "1119:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1106:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:6"
																},
																"nativeSrc": "1106:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1106:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1097:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1097:5:6"
																}
															]
														},
														{
															"nativeSrc": "1147:15:6",
															"nodeType": "YulAssignment",
															"src": "1147:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1157:5:6",
																"nodeType": "YulIdentifier",
																"src": "1157:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1147:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "868:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "913:9:6",
														"nodeType": "YulTypedName",
														"src": "913:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "924:7:6",
														"nodeType": "YulTypedName",
														"src": "924:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "936:6:6",
														"nodeType": "YulTypedName",
														"src": "936:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "944:6:6",
														"nodeType": "YulTypedName",
														"src": "944:6:6",
														"type": ""
													}
												],
												"src": "868:300:6"
											},
											{
												"body": {
													"nativeSrc": "1268:92:6",
													"nodeType": "YulBlock",
													"src": "1268:92:6",
													"statements": [
														{
															"nativeSrc": "1278:26:6",
															"nodeType": "YulAssignment",
															"src": "1278:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1290:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1286:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:6"
																},
																"nativeSrc": "1286:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1286:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1278:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1278:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1320:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1320:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1345:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1345:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1338:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1338:6:6"
																				},
																				"nativeSrc": "1338:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1338:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1331:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1331:6:6"
																		},
																		"nativeSrc": "1331:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:6"
																},
																"nativeSrc": "1313:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1313:41:6"
															},
															"nativeSrc": "1313:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1313:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1173:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1237:9:6",
														"nodeType": "YulTypedName",
														"src": "1237:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1248:6:6",
														"nodeType": "YulTypedName",
														"src": "1248:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1259:4:6",
														"nodeType": "YulTypedName",
														"src": "1259:4:6",
														"type": ""
													}
												],
												"src": "1173:187:6"
											},
											{
												"body": {
													"nativeSrc": "1480:102:6",
													"nodeType": "YulBlock",
													"src": "1480:102:6",
													"statements": [
														{
															"nativeSrc": "1490:26:6",
															"nodeType": "YulAssignment",
															"src": "1490:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1502:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1513:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:6"
																},
																"nativeSrc": "1498:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1498:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1490:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1532:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1532:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1547:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1547:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1563:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1563:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1568:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1568:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1559:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1559:3:6"
																						},
																						"nativeSrc": "1559:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1559:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1572:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1572:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1555:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:6"
																				},
																				"nativeSrc": "1555:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1555:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1543:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:6"
																		},
																		"nativeSrc": "1543:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:6"
																},
																"nativeSrc": "1525:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1525:51:6"
															},
															"nativeSrc": "1525:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1525:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "1365:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1449:9:6",
														"nodeType": "YulTypedName",
														"src": "1449:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:6",
														"nodeType": "YulTypedName",
														"src": "1460:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:6",
														"nodeType": "YulTypedName",
														"src": "1471:4:6",
														"type": ""
													}
												],
												"src": "1365:217:6"
											},
											{
												"body": {
													"nativeSrc": "1688:76:6",
													"nodeType": "YulBlock",
													"src": "1688:76:6",
													"statements": [
														{
															"nativeSrc": "1698:26:6",
															"nodeType": "YulAssignment",
															"src": "1698:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1710:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1710:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1721:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1721:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1706:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1706:3:6"
																},
																"nativeSrc": "1706:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1706:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1698:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1698:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1740:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1740:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1751:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:6"
																},
																"nativeSrc": "1733:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1733:25:6"
															},
															"nativeSrc": "1733:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1733:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1587:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1657:9:6",
														"nodeType": "YulTypedName",
														"src": "1657:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1668:6:6",
														"nodeType": "YulTypedName",
														"src": "1668:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1679:4:6",
														"nodeType": "YulTypedName",
														"src": "1679:4:6",
														"type": ""
													}
												],
												"src": "1587:177:6"
											},
											{
												"body": {
													"nativeSrc": "1873:270:6",
													"nodeType": "YulBlock",
													"src": "1873:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1919:16:6",
																"nodeType": "YulBlock",
																"src": "1919:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1928:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1928:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1931:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1921:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:6"
																			},
																			"nativeSrc": "1921:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1921:12:6"
																		},
																		"nativeSrc": "1921:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1921:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1894:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1894:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1903:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1903:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1890:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1890:3:6"
																		},
																		"nativeSrc": "1890:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1890:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1915:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1915:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1886:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:6"
																},
																"nativeSrc": "1886:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1886:32:6"
															},
															"nativeSrc": "1883:52:6",
															"nodeType": "YulIf",
															"src": "1883:52:6"
														},
														{
															"nativeSrc": "1944:39:6",
															"nodeType": "YulAssignment",
															"src": "1944:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1973:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1973:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1954:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1954:18:6"
																},
																"nativeSrc": "1954:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1954:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																}
															]
														},
														{
															"nativeSrc": "1992:48:6",
															"nodeType": "YulAssignment",
															"src": "1992:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2025:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2021:3:6"
																		},
																		"nativeSrc": "2021:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2021:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2002:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:18:6"
																},
																"nativeSrc": "2002:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:6"
																}
															]
														},
														{
															"nativeSrc": "2049:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2049:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2062:1:6",
																"nodeType": "YulLiteral",
																"src": "2062:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2053:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2053:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2072:41:6",
															"nodeType": "YulAssignment",
															"src": "2072:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2109:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2109:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:6"
																		},
																		"nativeSrc": "2094:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2094:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2081:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2081:12:6"
																},
																"nativeSrc": "2081:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2081:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2072:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2072:5:6"
																}
															]
														},
														{
															"nativeSrc": "2122:15:6",
															"nodeType": "YulAssignment",
															"src": "2122:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2132:5:6",
																"nodeType": "YulIdentifier",
																"src": "2132:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1769:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1823:9:6",
														"nodeType": "YulTypedName",
														"src": "1823:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1834:7:6",
														"nodeType": "YulTypedName",
														"src": "1834:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1846:6:6",
														"nodeType": "YulTypedName",
														"src": "1846:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1854:6:6",
														"nodeType": "YulTypedName",
														"src": "1854:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1862:6:6",
														"nodeType": "YulTypedName",
														"src": "1862:6:6",
														"type": ""
													}
												],
												"src": "1769:374:6"
											},
											{
												"body": {
													"nativeSrc": "2245:87:6",
													"nodeType": "YulBlock",
													"src": "2245:87:6",
													"statements": [
														{
															"nativeSrc": "2255:26:6",
															"nodeType": "YulAssignment",
															"src": "2255:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2267:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2267:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2278:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:6"
																},
																"nativeSrc": "2263:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2263:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2255:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2255:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2297:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2297:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2312:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2312:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2320:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2320:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:6"
																		},
																		"nativeSrc": "2308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2308:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:6"
																},
																"nativeSrc": "2290:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2290:36:6"
															},
															"nativeSrc": "2290:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2290:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2148:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2214:9:6",
														"nodeType": "YulTypedName",
														"src": "2214:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2225:6:6",
														"nodeType": "YulTypedName",
														"src": "2225:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2236:4:6",
														"nodeType": "YulTypedName",
														"src": "2236:4:6",
														"type": ""
													}
												],
												"src": "2148:184:6"
											},
											{
												"body": {
													"nativeSrc": "2407:116:6",
													"nodeType": "YulBlock",
													"src": "2407:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2453:16:6",
																"nodeType": "YulBlock",
																"src": "2453:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2462:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2462:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2465:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2465:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2455:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2455:6:6"
																			},
																			"nativeSrc": "2455:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2455:12:6"
																		},
																		"nativeSrc": "2455:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2455:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2428:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2428:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2437:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2437:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2424:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2424:3:6"
																		},
																		"nativeSrc": "2424:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2424:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2449:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2449:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2420:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2420:3:6"
																},
																"nativeSrc": "2420:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2420:32:6"
															},
															"nativeSrc": "2417:52:6",
															"nodeType": "YulIf",
															"src": "2417:52:6"
														},
														{
															"nativeSrc": "2478:39:6",
															"nodeType": "YulAssignment",
															"src": "2478:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2507:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2507:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2488:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2488:18:6"
																},
																"nativeSrc": "2488:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2488:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2478:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2337:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2373:9:6",
														"nodeType": "YulTypedName",
														"src": "2373:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2384:7:6",
														"nodeType": "YulTypedName",
														"src": "2384:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2396:6:6",
														"nodeType": "YulTypedName",
														"src": "2396:6:6",
														"type": ""
													}
												],
												"src": "2337:186:6"
											},
											{
												"body": {
													"nativeSrc": "2598:156:6",
													"nodeType": "YulBlock",
													"src": "2598:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2644:16:6",
																"nodeType": "YulBlock",
																"src": "2644:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2653:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2656:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2646:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:6"
																			},
																			"nativeSrc": "2646:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2646:12:6"
																		},
																		"nativeSrc": "2646:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2646:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2619:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2619:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2628:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2628:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:6"
																		},
																		"nativeSrc": "2615:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2611:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:6"
																},
																"nativeSrc": "2611:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2611:32:6"
															},
															"nativeSrc": "2608:52:6",
															"nodeType": "YulIf",
															"src": "2608:52:6"
														},
														{
															"nativeSrc": "2669:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2669:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2682:1:6",
																"nodeType": "YulLiteral",
																"src": "2682:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2673:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2673:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2692:32:6",
															"nodeType": "YulAssignment",
															"src": "2692:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2714:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2714:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2701:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2701:12:6"
																},
																"nativeSrc": "2701:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2701:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2692:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2692:5:6"
																}
															]
														},
														{
															"nativeSrc": "2733:15:6",
															"nodeType": "YulAssignment",
															"src": "2733:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:6",
																"nodeType": "YulIdentifier",
																"src": "2743:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2528:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2564:9:6",
														"nodeType": "YulTypedName",
														"src": "2564:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2575:7:6",
														"nodeType": "YulTypedName",
														"src": "2575:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2587:6:6",
														"nodeType": "YulTypedName",
														"src": "2587:6:6",
														"type": ""
													}
												],
												"src": "2528:226:6"
											},
											{
												"body": {
													"nativeSrc": "2846:259:6",
													"nodeType": "YulBlock",
													"src": "2846:259:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2892:16:6",
																"nodeType": "YulBlock",
																"src": "2892:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:6"
																			},
																			"nativeSrc": "2894:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:12:6"
																		},
																		"nativeSrc": "2894:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2867:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2867:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2876:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2876:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2863:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:6"
																		},
																		"nativeSrc": "2863:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2863:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2888:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2888:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2859:3:6"
																},
																"nativeSrc": "2859:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2859:32:6"
															},
															"nativeSrc": "2856:52:6",
															"nodeType": "YulIf",
															"src": "2856:52:6"
														},
														{
															"nativeSrc": "2917:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2917:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2930:1:6",
																"nodeType": "YulLiteral",
																"src": "2930:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2921:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2921:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2940:32:6",
															"nodeType": "YulAssignment",
															"src": "2940:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2962:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2962:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2949:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2949:12:6"
																},
																"nativeSrc": "2949:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2949:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2940:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2940:5:6"
																}
															]
														},
														{
															"nativeSrc": "2981:15:6",
															"nodeType": "YulAssignment",
															"src": "2981:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2991:5:6",
																"nodeType": "YulIdentifier",
																"src": "2991:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2981:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:6"
																}
															]
														},
														{
															"nativeSrc": "3005:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3005:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3020:1:6",
																"nodeType": "YulLiteral",
																"src": "3020:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3009:7:6",
																	"nodeType": "YulTypedName",
																	"src": "3009:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3030:43:6",
															"nodeType": "YulAssignment",
															"src": "3030:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3058:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3069:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3054:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:6"
																		},
																		"nativeSrc": "3054:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3054:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3041:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3041:12:6"
																},
																"nativeSrc": "3041:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3041:32:6"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3030:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3030:7:6"
																}
															]
														},
														{
															"nativeSrc": "3082:17:6",
															"nodeType": "YulAssignment",
															"src": "3082:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "3092:7:6",
																"nodeType": "YulIdentifier",
																"src": "3092:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2759:346:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2804:9:6",
														"nodeType": "YulTypedName",
														"src": "2804:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2815:7:6",
														"nodeType": "YulTypedName",
														"src": "2815:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2827:6:6",
														"nodeType": "YulTypedName",
														"src": "2827:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2835:6:6",
														"nodeType": "YulTypedName",
														"src": "2835:6:6",
														"type": ""
													}
												],
												"src": "2759:346:6"
											},
											{
												"body": {
													"nativeSrc": "3197:173:6",
													"nodeType": "YulBlock",
													"src": "3197:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3243:16:6",
																"nodeType": "YulBlock",
																"src": "3243:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3252:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3252:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3255:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3255:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3245:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:6"
																			},
																			"nativeSrc": "3245:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3245:12:6"
																		},
																		"nativeSrc": "3245:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3218:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3218:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3227:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3214:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:6"
																		},
																		"nativeSrc": "3214:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3214:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3239:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3239:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3210:3:6"
																},
																"nativeSrc": "3210:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3210:32:6"
															},
															"nativeSrc": "3207:52:6",
															"nodeType": "YulIf",
															"src": "3207:52:6"
														},
														{
															"nativeSrc": "3268:39:6",
															"nodeType": "YulAssignment",
															"src": "3268:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3297:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3278:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3278:18:6"
																},
																"nativeSrc": "3278:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3278:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3268:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:6"
																}
															]
														},
														{
															"nativeSrc": "3316:48:6",
															"nodeType": "YulAssignment",
															"src": "3316:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3349:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3349:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3360:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3360:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3345:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3345:3:6"
																		},
																		"nativeSrc": "3345:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3345:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3326:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:18:6"
																},
																"nativeSrc": "3326:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3326:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3110:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3155:9:6",
														"nodeType": "YulTypedName",
														"src": "3155:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3166:7:6",
														"nodeType": "YulTypedName",
														"src": "3166:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3178:6:6",
														"nodeType": "YulTypedName",
														"src": "3178:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3186:6:6",
														"nodeType": "YulTypedName",
														"src": "3186:6:6",
														"type": ""
													}
												],
												"src": "3110:260:6"
											},
											{
												"body": {
													"nativeSrc": "3430:325:6",
													"nodeType": "YulBlock",
													"src": "3430:325:6",
													"statements": [
														{
															"nativeSrc": "3440:22:6",
															"nodeType": "YulAssignment",
															"src": "3440:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3454:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3457:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3457:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3450:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:6"
																},
																"nativeSrc": "3450:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3450:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3440:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:6"
																}
															]
														},
														{
															"nativeSrc": "3471:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3471:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3501:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3501:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3507:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3507:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3497:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:3:6"
																},
																"nativeSrc": "3497:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3497:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3475:18:6",
																	"nodeType": "YulTypedName",
																	"src": "3475:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3548:31:6",
																"nodeType": "YulBlock",
																"src": "3548:31:6",
																"statements": [
																	{
																		"nativeSrc": "3550:27:6",
																		"nodeType": "YulAssignment",
																		"src": "3550:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3564:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3564:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3572:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3572:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3560:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3560:3:6"
																			},
																			"nativeSrc": "3560:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3560:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3550:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3550:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3528:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3528:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nativeSrc": "3521:26:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:26:6"
															},
															"nativeSrc": "3518:61:6",
															"nodeType": "YulIf",
															"src": "3518:61:6"
														},
														{
															"body": {
																"nativeSrc": "3638:111:6",
																"nodeType": "YulBlock",
																"src": "3638:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3659:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3659:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3666:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3666:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3671:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3671:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3662:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3662:3:6"
																					},
																					"nativeSrc": "3662:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3662:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3652:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3652:6:6"
																			},
																			"nativeSrc": "3652:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3652:31:6"
																		},
																		"nativeSrc": "3652:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3652:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3703:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3703:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3706:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3706:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3696:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3696:6:6"
																			},
																			"nativeSrc": "3696:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3696:15:6"
																		},
																		"nativeSrc": "3696:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3696:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3731:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3731:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3734:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3734:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3724:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3724:6:6"
																			},
																			"nativeSrc": "3724:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3724:15:6"
																		},
																		"nativeSrc": "3724:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3724:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3594:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "3594:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3617:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3617:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3625:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3614:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3614:2:6"
																		},
																		"nativeSrc": "3614:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3591:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3591:2:6"
																},
																"nativeSrc": "3591:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3591:38:6"
															},
															"nativeSrc": "3588:161:6",
															"nodeType": "YulIf",
															"src": "3588:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3375:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3410:4:6",
														"nodeType": "YulTypedName",
														"src": "3410:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3419:6:6",
														"nodeType": "YulTypedName",
														"src": "3419:6:6",
														"type": ""
													}
												],
												"src": "3375:380:6"
											},
											{
												"body": {
													"nativeSrc": "3934:175:6",
													"nodeType": "YulBlock",
													"src": "3934:175:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3951:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3951:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3962:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3962:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:6"
																},
																"nativeSrc": "3944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3944:21:6"
															},
															"nativeSrc": "3944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3944:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3985:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3985:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3996:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3996:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3981:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:6"
																		},
																		"nativeSrc": "3981:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4001:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4001:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3974:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:6"
																},
																"nativeSrc": "3974:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3974:30:6"
															},
															"nativeSrc": "3974:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3974:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4024:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4035:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4020:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:6"
																		},
																		"nativeSrc": "4020:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:6"
																	},
																	{
																		"hexValue": "43616e6e6f742072656d6f76652030206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "4040:27:6",
																		"nodeType": "YulLiteral",
																		"src": "4040:27:6",
																		"type": "",
																		"value": "Cannot remove 0 liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:6"
																},
																"nativeSrc": "4013:55:6",
																"nodeType": "YulFunctionCall",
																"src": "4013:55:6"
															},
															"nativeSrc": "4013:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "4013:55:6"
														},
														{
															"nativeSrc": "4077:26:6",
															"nodeType": "YulAssignment",
															"src": "4077:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4089:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4089:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4100:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4100:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4085:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:6"
																},
																"nativeSrc": "4085:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4085:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4077:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4077:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbefc1394a9663abb98c29509318d8f08d19ffc71ec61cf3b5ff3557905f4a7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3760:349:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3911:9:6",
														"nodeType": "YulTypedName",
														"src": "3911:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3925:4:6",
														"nodeType": "YulTypedName",
														"src": "3925:4:6",
														"type": ""
													}
												],
												"src": "3760:349:6"
											},
											{
												"body": {
													"nativeSrc": "4146:95:6",
													"nodeType": "YulBlock",
													"src": "4146:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4163:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4163:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4170:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4170:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4175:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4175:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4166:3:6"
																		},
																		"nativeSrc": "4166:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4166:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:6"
																},
																"nativeSrc": "4156:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4156:31:6"
															},
															"nativeSrc": "4156:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4156:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4203:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4203:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4206:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4206:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4196:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:6"
																},
																"nativeSrc": "4196:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4196:15:6"
															},
															"nativeSrc": "4196:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4196:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4227:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4230:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4230:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:6"
																},
																"nativeSrc": "4220:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4220:15:6"
															},
															"nativeSrc": "4220:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4220:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4114:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4114:127:6"
											},
											{
												"body": {
													"nativeSrc": "4298:116:6",
													"nodeType": "YulBlock",
													"src": "4298:116:6",
													"statements": [
														{
															"nativeSrc": "4308:20:6",
															"nodeType": "YulAssignment",
															"src": "4308:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4323:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4323:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4326:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4326:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4319:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4319:3:6"
																},
																"nativeSrc": "4319:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4319:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4308:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4386:22:6",
																"nodeType": "YulBlock",
																"src": "4386:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4388:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4388:16:6"
																			},
																			"nativeSrc": "4388:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4388:18:6"
																		},
																		"nativeSrc": "4388:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4357:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4350:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4350:6:6"
																				},
																				"nativeSrc": "4350:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4350:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4364:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4364:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4371:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4371:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4380:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4380:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4367:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4367:3:6"
																						},
																						"nativeSrc": "4367:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4367:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4361:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4361:2:6"
																				},
																				"nativeSrc": "4361:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4361:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4347:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:2:6"
																		},
																		"nativeSrc": "4347:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:6"
																},
																"nativeSrc": "4340:45:6",
																"nodeType": "YulFunctionCall",
																"src": "4340:45:6"
															},
															"nativeSrc": "4337:71:6",
															"nodeType": "YulIf",
															"src": "4337:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4246:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4277:1:6",
														"nodeType": "YulTypedName",
														"src": "4277:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4280:1:6",
														"nodeType": "YulTypedName",
														"src": "4280:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4286:7:6",
														"nodeType": "YulTypedName",
														"src": "4286:7:6",
														"type": ""
													}
												],
												"src": "4246:168:6"
											},
											{
												"body": {
													"nativeSrc": "4465:171:6",
													"nodeType": "YulBlock",
													"src": "4465:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4496:111:6",
																"nodeType": "YulBlock",
																"src": "4496:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4517:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4524:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4524:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4529:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4529:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4520:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4520:3:6"
																					},
																					"nativeSrc": "4520:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4520:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4510:6:6"
																			},
																			"nativeSrc": "4510:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4510:31:6"
																		},
																		"nativeSrc": "4510:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4561:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4561:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4564:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4564:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4554:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4554:6:6"
																			},
																			"nativeSrc": "4554:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:15:6"
																		},
																		"nativeSrc": "4554:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4554:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4589:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4589:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4582:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4582:6:6"
																			},
																			"nativeSrc": "4582:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4582:15:6"
																		},
																		"nativeSrc": "4582:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4582:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4485:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4485:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4478:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4478:6:6"
																},
																"nativeSrc": "4478:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4478:9:6"
															},
															"nativeSrc": "4475:132:6",
															"nodeType": "YulIf",
															"src": "4475:132:6"
														},
														{
															"nativeSrc": "4616:14:6",
															"nodeType": "YulAssignment",
															"src": "4616:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4625:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4625:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4628:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4628:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4621:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:6"
																},
																"nativeSrc": "4621:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4621:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4616:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4616:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4419:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4450:1:6",
														"nodeType": "YulTypedName",
														"src": "4450:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4453:1:6",
														"nodeType": "YulTypedName",
														"src": "4453:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4459:1:6",
														"nodeType": "YulTypedName",
														"src": "4459:1:6",
														"type": ""
													}
												],
												"src": "4419:217:6"
											},
											{
												"body": {
													"nativeSrc": "4815:182:6",
													"nodeType": "YulBlock",
													"src": "4815:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4832:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4832:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4843:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4825:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:6"
																},
																"nativeSrc": "4825:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:21:6"
															},
															"nativeSrc": "4825:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4825:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4866:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4866:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4877:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4877:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4862:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:6"
																		},
																		"nativeSrc": "4862:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4862:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4882:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4855:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:6"
																},
																"nativeSrc": "4855:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4855:30:6"
															},
															"nativeSrc": "4855:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4855:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4905:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4905:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4916:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4916:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4901:3:6"
																		},
																		"nativeSrc": "4901:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4901:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616d6f756e747320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "4921:34:6",
																		"nodeType": "YulLiteral",
																		"src": "4921:34:6",
																		"type": "",
																		"value": "Insufficient amounts to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:6"
																},
																"nativeSrc": "4894:62:6",
																"nodeType": "YulFunctionCall",
																"src": "4894:62:6"
															},
															"nativeSrc": "4894:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "4894:62:6"
														},
														{
															"nativeSrc": "4965:26:6",
															"nodeType": "YulAssignment",
															"src": "4965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:6"
																},
																"nativeSrc": "4973:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_853566487f2e621eab8c339b98dec3baa9bd207b1822aefec5a36c1dcbb67bd7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4641:356:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4792:9:6",
														"nodeType": "YulTypedName",
														"src": "4792:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4806:4:6",
														"nodeType": "YulTypedName",
														"src": "4806:4:6",
														"type": ""
													}
												],
												"src": "4641:356:6"
											},
											{
												"body": {
													"nativeSrc": "5131:145:6",
													"nodeType": "YulBlock",
													"src": "5131:145:6",
													"statements": [
														{
															"nativeSrc": "5141:26:6",
															"nodeType": "YulAssignment",
															"src": "5141:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5153:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5153:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5164:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5164:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5149:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5149:3:6"
																},
																"nativeSrc": "5149:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5149:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5141:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5141:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5183:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5183:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5198:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5198:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5214:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5214:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5219:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5219:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5210:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5210:3:6"
																						},
																						"nativeSrc": "5210:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5210:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5223:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5223:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5206:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5206:3:6"
																				},
																				"nativeSrc": "5206:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5206:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5194:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:6"
																		},
																		"nativeSrc": "5194:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5176:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5176:6:6"
																},
																"nativeSrc": "5176:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5176:51:6"
															},
															"nativeSrc": "5176:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5176:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5247:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5247:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5258:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5258:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5243:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:6"
																		},
																		"nativeSrc": "5243:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5243:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5263:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5236:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:6"
																},
																"nativeSrc": "5236:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5236:34:6"
															},
															"nativeSrc": "5236:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5236:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5002:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5092:9:6",
														"nodeType": "YulTypedName",
														"src": "5092:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5103:6:6",
														"nodeType": "YulTypedName",
														"src": "5103:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5111:6:6",
														"nodeType": "YulTypedName",
														"src": "5111:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5122:4:6",
														"nodeType": "YulTypedName",
														"src": "5122:4:6",
														"type": ""
													}
												],
												"src": "5002:274:6"
											},
											{
												"body": {
													"nativeSrc": "5359:199:6",
													"nodeType": "YulBlock",
													"src": "5359:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5405:16:6",
																"nodeType": "YulBlock",
																"src": "5405:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5414:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5414:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5417:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5417:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5407:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5407:6:6"
																			},
																			"nativeSrc": "5407:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5407:12:6"
																		},
																		"nativeSrc": "5407:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5407:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5380:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5380:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5389:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5376:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:6"
																		},
																		"nativeSrc": "5376:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5401:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:6"
																},
																"nativeSrc": "5372:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5372:32:6"
															},
															"nativeSrc": "5369:52:6",
															"nodeType": "YulIf",
															"src": "5369:52:6"
														},
														{
															"nativeSrc": "5430:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5430:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5449:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5449:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5443:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5443:5:6"
																},
																"nativeSrc": "5443:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5443:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5434:5:6",
																	"nodeType": "YulTypedName",
																	"src": "5434:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5512:16:6",
																"nodeType": "YulBlock",
																"src": "5512:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5521:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5521:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5524:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5524:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5514:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5514:6:6"
																			},
																			"nativeSrc": "5514:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5514:12:6"
																		},
																		"nativeSrc": "5514:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5514:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5481:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5481:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5502:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "5502:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5495:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5495:6:6"
																						},
																						"nativeSrc": "5495:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5495:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5488:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5488:6:6"
																				},
																				"nativeSrc": "5488:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5478:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5478:2:6"
																		},
																		"nativeSrc": "5478:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5471:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5471:6:6"
																},
																"nativeSrc": "5471:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5471:40:6"
															},
															"nativeSrc": "5468:60:6",
															"nodeType": "YulIf",
															"src": "5468:60:6"
														},
														{
															"nativeSrc": "5537:15:6",
															"nodeType": "YulAssignment",
															"src": "5537:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "5547:5:6",
																"nodeType": "YulIdentifier",
																"src": "5547:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5281:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5325:9:6",
														"nodeType": "YulTypedName",
														"src": "5325:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5336:7:6",
														"nodeType": "YulTypedName",
														"src": "5336:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5348:6:6",
														"nodeType": "YulTypedName",
														"src": "5348:6:6",
														"type": ""
													}
												],
												"src": "5281:277:6"
											},
											{
												"body": {
													"nativeSrc": "5612:79:6",
													"nodeType": "YulBlock",
													"src": "5612:79:6",
													"statements": [
														{
															"nativeSrc": "5622:17:6",
															"nodeType": "YulAssignment",
															"src": "5622:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5634:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5634:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5637:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5637:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5630:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5630:3:6"
																},
																"nativeSrc": "5630:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5630:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5622:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5622:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5663:22:6",
																"nodeType": "YulBlock",
																"src": "5663:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5665:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5665:16:6"
																			},
																			"nativeSrc": "5665:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5665:18:6"
																		},
																		"nativeSrc": "5665:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5665:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5654:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5654:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5660:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5660:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5651:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5651:2:6"
																},
																"nativeSrc": "5651:11:6",
																"nodeType": "YulFunctionCall",
																"src": "5651:11:6"
															},
															"nativeSrc": "5648:37:6",
															"nodeType": "YulIf",
															"src": "5648:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5563:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5594:1:6",
														"nodeType": "YulTypedName",
														"src": "5594:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5597:1:6",
														"nodeType": "YulTypedName",
														"src": "5597:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5603:4:6",
														"nodeType": "YulTypedName",
														"src": "5603:4:6",
														"type": ""
													}
												],
												"src": "5563:128:6"
											},
											{
												"body": {
													"nativeSrc": "5853:214:6",
													"nodeType": "YulBlock",
													"src": "5853:214:6",
													"statements": [
														{
															"nativeSrc": "5863:26:6",
															"nodeType": "YulAssignment",
															"src": "5863:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5875:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5875:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5871:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5871:3:6"
																},
																"nativeSrc": "5871:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5871:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5863:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5863:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5905:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5905:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5920:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5920:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5936:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5936:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5941:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5941:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5932:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5932:3:6"
																						},
																						"nativeSrc": "5932:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5932:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5945:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5945:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5928:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5928:3:6"
																				},
																				"nativeSrc": "5928:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5928:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:6"
																		},
																		"nativeSrc": "5916:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:6"
																},
																"nativeSrc": "5898:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5898:51:6"
															},
															"nativeSrc": "5898:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5898:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5980:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5980:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5965:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:6"
																		},
																		"nativeSrc": "5965:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5989:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5989:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6005:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6005:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6010:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6010:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6001:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6001:3:6"
																						},
																						"nativeSrc": "6001:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6001:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6014:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6014:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5997:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5997:3:6"
																				},
																				"nativeSrc": "5997:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5997:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5985:3:6"
																		},
																		"nativeSrc": "5985:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5985:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5958:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:6"
																},
																"nativeSrc": "5958:60:6",
																"nodeType": "YulFunctionCall",
																"src": "5958:60:6"
															},
															"nativeSrc": "5958:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "5958:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6038:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6038:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6049:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6049:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6034:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:6"
																		},
																		"nativeSrc": "6034:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6054:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6054:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6027:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:6"
																},
																"nativeSrc": "6027:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6027:34:6"
															},
															"nativeSrc": "6027:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6027:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5696:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5806:9:6",
														"nodeType": "YulTypedName",
														"src": "5806:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5817:6:6",
														"nodeType": "YulTypedName",
														"src": "5817:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5825:6:6",
														"nodeType": "YulTypedName",
														"src": "5825:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5833:6:6",
														"nodeType": "YulTypedName",
														"src": "5833:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5844:4:6",
														"nodeType": "YulTypedName",
														"src": "5844:4:6",
														"type": ""
													}
												],
												"src": "5696:371:6"
											},
											{
												"body": {
													"nativeSrc": "6246:167:6",
													"nodeType": "YulBlock",
													"src": "6246:167:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6263:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6263:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6274:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6274:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6256:6:6"
																},
																"nativeSrc": "6256:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6256:21:6"
															},
															"nativeSrc": "6256:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6256:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6297:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6297:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6308:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6308:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6293:3:6"
																		},
																		"nativeSrc": "6293:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6293:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6313:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6313:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:6"
																},
																"nativeSrc": "6286:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6286:30:6"
															},
															"nativeSrc": "6286:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6286:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6347:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6347:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:6"
																		},
																		"nativeSrc": "6332:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:18:6"
																	},
																	{
																		"hexValue": "5472616e736665722041206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6352:19:6",
																		"nodeType": "YulLiteral",
																		"src": "6352:19:6",
																		"type": "",
																		"value": "Transfer A failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:6"
																},
																"nativeSrc": "6325:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6325:47:6"
															},
															"nativeSrc": "6325:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6325:47:6"
														},
														{
															"nativeSrc": "6381:26:6",
															"nodeType": "YulAssignment",
															"src": "6381:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6393:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6393:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6404:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6389:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6389:3:6"
																},
																"nativeSrc": "6389:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6389:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6381:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6381:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc05cf861e9a7afd75d3a07a27aab1251715454224f78199d63bde7a07d3e37a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6072:341:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6223:9:6",
														"nodeType": "YulTypedName",
														"src": "6223:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6237:4:6",
														"nodeType": "YulTypedName",
														"src": "6237:4:6",
														"type": ""
													}
												],
												"src": "6072:341:6"
											},
											{
												"body": {
													"nativeSrc": "6592:167:6",
													"nodeType": "YulBlock",
													"src": "6592:167:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6609:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6609:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6602:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:6"
																},
																"nativeSrc": "6602:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6602:21:6"
															},
															"nativeSrc": "6602:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6602:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6643:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6654:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6654:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6639:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:6"
																		},
																		"nativeSrc": "6639:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6659:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6632:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:6"
																},
																"nativeSrc": "6632:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6632:30:6"
															},
															"nativeSrc": "6632:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6632:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6693:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:6"
																		},
																		"nativeSrc": "6678:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:18:6"
																	},
																	{
																		"hexValue": "5472616e736665722042206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6698:19:6",
																		"nodeType": "YulLiteral",
																		"src": "6698:19:6",
																		"type": "",
																		"value": "Transfer B failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6671:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6671:6:6"
																},
																"nativeSrc": "6671:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6671:47:6"
															},
															"nativeSrc": "6671:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6671:47:6"
														},
														{
															"nativeSrc": "6727:26:6",
															"nodeType": "YulAssignment",
															"src": "6727:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6739:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6750:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6735:3:6"
																},
																"nativeSrc": "6735:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6735:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6727:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6727:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9c7225611efcf9985316b9201ddc542c081cfa5a75cf93866b7ec8f68500689__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6418:341:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6569:9:6",
														"nodeType": "YulTypedName",
														"src": "6569:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6583:4:6",
														"nodeType": "YulTypedName",
														"src": "6583:4:6",
														"type": ""
													}
												],
												"src": "6418:341:6"
											},
											{
												"body": {
													"nativeSrc": "6938:179:6",
													"nodeType": "YulBlock",
													"src": "6938:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6955:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6955:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6966:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6948:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:6"
																},
																"nativeSrc": "6948:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6948:21:6"
															},
															"nativeSrc": "6948:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6948:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7000:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7000:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:6"
																		},
																		"nativeSrc": "6985:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6978:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:6"
																},
																"nativeSrc": "6978:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6978:30:6"
															},
															"nativeSrc": "6978:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6978:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7028:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7039:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7039:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7024:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:6"
																		},
																		"nativeSrc": "7024:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:18:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479206d696e746564",
																		"kind": "string",
																		"nativeSrc": "7044:31:6",
																		"nodeType": "YulLiteral",
																		"src": "7044:31:6",
																		"type": "",
																		"value": "Insufficient liquidity minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:6"
																},
																"nativeSrc": "7017:59:6",
																"nodeType": "YulFunctionCall",
																"src": "7017:59:6"
															},
															"nativeSrc": "7017:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "7017:59:6"
														},
														{
															"nativeSrc": "7085:26:6",
															"nodeType": "YulAssignment",
															"src": "7085:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7097:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7108:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7093:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:6"
																},
																"nativeSrc": "7093:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7093:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7085:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7085:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6fe24d4d496c9aa03e79515e2b1d45390a780027b3e2e43b0558c23d6aacee7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6764:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6915:9:6",
														"nodeType": "YulTypedName",
														"src": "6915:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6929:4:6",
														"nodeType": "YulTypedName",
														"src": "6929:4:6",
														"type": ""
													}
												],
												"src": "6764:353:6"
											},
											{
												"body": {
													"nativeSrc": "7170:77:6",
													"nodeType": "YulBlock",
													"src": "7170:77:6",
													"statements": [
														{
															"nativeSrc": "7180:16:6",
															"nodeType": "YulAssignment",
															"src": "7180:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7191:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7191:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7194:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7194:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7187:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7187:3:6"
																},
																"nativeSrc": "7187:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7187:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7180:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7219:22:6",
																"nodeType": "YulBlock",
																"src": "7219:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7221:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7221:16:6"
																			},
																			"nativeSrc": "7221:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7221:18:6"
																		},
																		"nativeSrc": "7221:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7221:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7211:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7211:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7214:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7214:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7208:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7208:2:6"
																},
																"nativeSrc": "7208:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7208:10:6"
															},
															"nativeSrc": "7205:36:6",
															"nodeType": "YulIf",
															"src": "7205:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7122:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7153:1:6",
														"nodeType": "YulTypedName",
														"src": "7153:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7156:1:6",
														"nodeType": "YulTypedName",
														"src": "7156:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7162:3:6",
														"nodeType": "YulTypedName",
														"src": "7162:3:6",
														"type": ""
													}
												],
												"src": "7122:125:6"
											},
											{
												"body": {
													"nativeSrc": "7426:169:6",
													"nodeType": "YulBlock",
													"src": "7426:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7443:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7443:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7454:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7454:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:6"
																},
																"nativeSrc": "7436:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7436:21:6"
															},
															"nativeSrc": "7436:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7436:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7488:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7473:3:6"
																		},
																		"nativeSrc": "7473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7473:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7493:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7493:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7466:6:6"
																},
																"nativeSrc": "7466:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7466:30:6"
															},
															"nativeSrc": "7466:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7466:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7516:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7527:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7512:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:6"
																		},
																		"nativeSrc": "7512:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7512:18:6"
																	},
																	{
																		"hexValue": "496e76616c696420696e70757420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "7532:21:6",
																		"nodeType": "YulLiteral",
																		"src": "7532:21:6",
																		"type": "",
																		"value": "Invalid input token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7505:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:6"
																},
																"nativeSrc": "7505:49:6",
																"nodeType": "YulFunctionCall",
																"src": "7505:49:6"
															},
															"nativeSrc": "7505:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "7505:49:6"
														},
														{
															"nativeSrc": "7563:26:6",
															"nodeType": "YulAssignment",
															"src": "7563:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7575:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7575:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7586:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7586:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7571:3:6"
																},
																"nativeSrc": "7571:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7571:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7563:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7563:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7252:343:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7403:9:6",
														"nodeType": "YulTypedName",
														"src": "7403:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7417:4:6",
														"nodeType": "YulTypedName",
														"src": "7417:4:6",
														"type": ""
													}
												],
												"src": "7252:343:6"
											},
											{
												"body": {
													"nativeSrc": "7774:176:6",
													"nodeType": "YulBlock",
													"src": "7774:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7791:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7791:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7802:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7784:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7784:6:6"
																},
																"nativeSrc": "7784:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7784:21:6"
															},
															"nativeSrc": "7784:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7784:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7825:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7836:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7836:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7821:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7821:3:6"
																		},
																		"nativeSrc": "7821:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7821:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7841:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7841:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7814:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:6"
																},
																"nativeSrc": "7814:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7814:30:6"
															},
															"nativeSrc": "7814:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7814:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7864:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7864:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7875:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7875:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7860:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7860:3:6"
																		},
																		"nativeSrc": "7860:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7860:18:6"
																	},
																	{
																		"hexValue": "416d6f756e7420696e206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "7880:28:6",
																		"nodeType": "YulLiteral",
																		"src": "7880:28:6",
																		"type": "",
																		"value": "Amount in must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7853:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7853:6:6"
																},
																"nativeSrc": "7853:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7853:56:6"
															},
															"nativeSrc": "7853:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "7853:56:6"
														},
														{
															"nativeSrc": "7918:26:6",
															"nodeType": "YulAssignment",
															"src": "7918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7930:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:6"
																},
																"nativeSrc": "7926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7918:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f653d3b2f2097e41c35d308bc564aebe4f4884b6f793c5db2a9cdd5eca51622__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7600:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7751:9:6",
														"nodeType": "YulTypedName",
														"src": "7751:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7765:4:6",
														"nodeType": "YulTypedName",
														"src": "7765:4:6",
														"type": ""
													}
												],
												"src": "7600:350:6"
											},
											{
												"body": {
													"nativeSrc": "8112:188:6",
													"nodeType": "YulBlock",
													"src": "8112:188:6",
													"statements": [
														{
															"nativeSrc": "8122:26:6",
															"nodeType": "YulAssignment",
															"src": "8122:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8134:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8134:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8145:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8145:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8130:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8130:3:6"
																},
																"nativeSrc": "8130:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8130:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8122:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8122:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8164:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8164:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8179:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8179:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8195:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8195:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8200:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8200:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8191:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8191:3:6"
																						},
																						"nativeSrc": "8191:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8191:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8204:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8204:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8187:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8187:3:6"
																				},
																				"nativeSrc": "8187:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8187:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8175:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:6"
																		},
																		"nativeSrc": "8175:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8175:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8157:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:6"
																},
																"nativeSrc": "8157:51:6",
																"nodeType": "YulFunctionCall",
																"src": "8157:51:6"
															},
															"nativeSrc": "8157:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "8157:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8228:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8228:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8239:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8239:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:6"
																		},
																		"nativeSrc": "8224:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8244:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8244:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:6"
																},
																"nativeSrc": "8217:34:6",
																"nodeType": "YulFunctionCall",
																"src": "8217:34:6"
															},
															"nativeSrc": "8217:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "8217:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8271:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8282:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:6"
																		},
																		"nativeSrc": "8267:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8287:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8287:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:6"
																},
																"nativeSrc": "8260:34:6",
																"nodeType": "YulFunctionCall",
																"src": "8260:34:6"
															},
															"nativeSrc": "8260:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "8260:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7955:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8065:9:6",
														"nodeType": "YulTypedName",
														"src": "8065:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8076:6:6",
														"nodeType": "YulTypedName",
														"src": "8076:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8084:6:6",
														"nodeType": "YulTypedName",
														"src": "8084:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8092:6:6",
														"nodeType": "YulTypedName",
														"src": "8092:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8103:4:6",
														"nodeType": "YulTypedName",
														"src": "8103:4:6",
														"type": ""
													}
												],
												"src": "7955:345:6"
											},
											{
												"body": {
													"nativeSrc": "8406:102:6",
													"nodeType": "YulBlock",
													"src": "8406:102:6",
													"statements": [
														{
															"nativeSrc": "8416:26:6",
															"nodeType": "YulAssignment",
															"src": "8416:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8428:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8428:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8439:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8439:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8424:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8424:3:6"
																},
																"nativeSrc": "8424:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8424:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8416:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8458:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8458:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8473:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8473:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8489:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8489:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8494:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8494:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8485:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8485:3:6"
																						},
																						"nativeSrc": "8485:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8485:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8498:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8498:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8481:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8481:3:6"
																				},
																				"nativeSrc": "8481:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8481:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8469:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:6"
																		},
																		"nativeSrc": "8469:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8451:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8451:6:6"
																},
																"nativeSrc": "8451:51:6",
																"nodeType": "YulFunctionCall",
																"src": "8451:51:6"
															},
															"nativeSrc": "8451:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "8451:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8305:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8375:9:6",
														"nodeType": "YulTypedName",
														"src": "8375:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8386:6:6",
														"nodeType": "YulTypedName",
														"src": "8386:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8397:4:6",
														"nodeType": "YulTypedName",
														"src": "8397:4:6",
														"type": ""
													}
												],
												"src": "8305:203:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_cbefc1394a9663abb98c29509318d8f08d19ffc71ec61cf3b5ff3557905f4a7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Cannot remove 0 liquidity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_853566487f2e621eab8c339b98dec3baa9bd207b1822aefec5a36c1dcbb67bd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Insufficient amounts to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_bc05cf861e9a7afd75d3a07a27aab1251715454224f78199d63bde7a07d3e37a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Transfer A failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c9c7225611efcf9985316b9201ddc542c081cfa5a75cf93866b7ec8f68500689__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Transfer B failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e6fe24d4d496c9aa03e79515e2b1d45390a780027b3e2e43b0558c23d6aacee7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient liquidity minted\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid input token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7f653d3b2f2097e41c35d308bc564aebe4f4884b6f793c5db2a9cdd5eca51622__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Amount in must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"794": [
									{
										"length": 32,
										"start": 334
									},
									{
										"length": 32,
										"start": 1123
									},
									{
										"length": 32,
										"start": 1465
									},
									{
										"length": 32,
										"start": 2061
									},
									{
										"length": 32,
										"start": 2447
									},
									{
										"length": 32,
										"start": 2885
									}
								],
								"797": [
									{
										"length": 32,
										"start": 447
									},
									{
										"length": 32,
										"start": 1266
									},
									{
										"length": 32,
										"start": 1673
									},
									{
										"length": 32,
										"start": 2120
									},
									{
										"length": 32,
										"start": 2630
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80635f64b55b1161008f5780635f64b55b146101ba57806370a08231146101e157806395d89b41146102095780639c8f9f23146102115780639cd441da14610224578063a9059cbb14610237578063d004f0f71461024a578063dc5fa6c51461025d578063dd62ed3e14610266575f5ffd5b806306fdde03146100ec5780630902f1ac1461010a578063095ea7b3146101265780630fc63d101461014957806318160ddd1461017d57806319e36f3b1461018f57806323b872dd14610198578063313ce567146101ab575b5f5ffd5b6100f4610279565b6040516101019190610f02565b60405180910390f35b6005546006545b60408051928352602083019190915201610101565b610139610134366004610f52565b610309565b6040519015158152602001610101565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6040516101019190610f7a565b6002545b604051908152602001610101565b61018160065481565b6101396101a6366004610f8e565b610322565b60405160128152602001610101565b6101707f000000000000000000000000000000000000000000000000000000000000000081565b6101816101ef366004610fc8565b6001600160a01b03165f9081526020819052604090205490565b6100f4610345565b61011161021f366004610fe8565b610354565b610181610232366004610fff565b6105a0565b610139610245366004610f52565b6107fd565b610181610258366004610f52565b61080a565b61018160055481565b61018161027436600461101f565b610bc7565b60606003805461028890611050565b80601f01602080910402602001604051908101604052809291908181526020018280546102b490611050565b80156102ff5780601f106102d6576101008083540402835291602001916102ff565b820191905f5260205f20905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b5f33610316818585610bf1565b60019150505b92915050565b5f3361032f858285610c03565b61033a858585610c54565b506001949350505050565b60606004805461028890611050565b5f5f5f83116103a65760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742072656d6f76652030206c697175696469747960381b60448201526064015b60405180910390fd5b5f6103b060025490565b905080846005546103c1919061109c565b6103cb91906110b3565b925080846006546103dc919061109c565b6103e691906110b3565b91505f831180156103f657505f82115b6104425760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420616d6f756e747320746f207769746864726177604482015260640161039d565b61044c3385610cb1565b60405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061049a90339087906004016110d2565b6020604051808303815f875af11580156104b6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104da91906110eb565b5060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061052990339086906004016110d2565b6020604051808303815f875af1158015610545573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056991906110eb565b508260055f82825461057b919061110a565b925050819055508160065f828254610593919061110a565b9250508190555050915091565b6040516323b872dd60e01b81525f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906105f29033903090889060040161111d565b6020604051808303815f875af115801561060e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063291906110eb565b6106725760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c88104819985a5b1959607a1b604482015260640161039d565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906106c29033903090879060040161111d565b6020604051808303815f875af11580156106de573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070291906110eb565b6107425760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c88108819985a5b1959607a1b604482015260640161039d565b6002545f0361075257508161076f565b600554600254610762908561109c565b61076c91906110b3565b90505b5f81116107be5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206d696e746564000000604482015260640161039d565b6107c83382610ce9565b8260055f8282546107d99190611141565b925050819055508160065f8282546107f19190611141565b90915550909392505050565b5f33610316818585610c54565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148061087c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b6108be5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b21034b7383aba103a37b5b2b760691b604482015260640161039d565b5f821161090d5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e7420696e206d75737420626520706f736974697665000000000000604482015260640161039d565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061093d9033903090879060040161111d565b6020604051808303815f875af1158015610959573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097d91906110eb565b505f61098b836103e561109c565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b031603610ac5575f600654826109d5919061109c565b90505f826005546103e86109e9919061109c565b6109f39190611141565b90506109ff81836110b3565b93508460055f828254610a129190611141565b925050819055508360065f828254610a2a919061110a565b909155505060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610a7d90339088906004016110d2565b6020604051808303815f875af1158015610a99573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abd91906110eb565b505050610bc0565b5f60055482610ad4919061109c565b90505f826006546103e8610ae8919061109c565b610af29190611141565b9050610afe81836110b3565b93508460065f828254610b119190611141565b925050819055508360055f828254610b29919061110a565b909155505060405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610b7c90339088906004016110d2565b6020604051808303815f875af1158015610b98573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbc91906110eb565b5050505b5092915050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b610bfe8383836001610d1d565b505050565b5f610c0e8484610bc7565b90505f19811015610c4e5781811015610c4057828183604051637dc7a0d960e11b815260040161039d93929190611154565b610c4e84848484035f610d1d565b50505050565b6001600160a01b038316610c7d575f604051634b637e8f60e11b815260040161039d9190610f7a565b6001600160a01b038216610ca6575f60405163ec442f0560e01b815260040161039d9190610f7a565b610bfe838383610def565b6001600160a01b038216610cda575f604051634b637e8f60e11b815260040161039d9190610f7a565b610ce5825f83610def565b5050565b6001600160a01b038216610d12575f60405163ec442f0560e01b815260040161039d9190610f7a565b610ce55f8383610def565b6001600160a01b038416610d46575f60405163e602df0560e01b815260040161039d9190610f7a565b6001600160a01b038316610d6f575f604051634a1406b160e11b815260040161039d9190610f7a565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c4e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610de191815260200190565b60405180910390a350505050565b6001600160a01b038316610e19578060025f828254610e0e9190611141565b90915550610e769050565b6001600160a01b0383165f9081526020819052604090205481811015610e585783818360405163391434e360e21b815260040161039d93929190611154565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610e9257600280548290039055610eb0565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ef591815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610f4d575f5ffd5b919050565b5f5f60408385031215610f63575f5ffd5b610f6c83610f37565b946020939093013593505050565b6001600160a01b0391909116815260200190565b5f5f5f60608486031215610fa0575f5ffd5b610fa984610f37565b9250610fb760208501610f37565b929592945050506040919091013590565b5f60208284031215610fd8575f5ffd5b610fe182610f37565b9392505050565b5f60208284031215610ff8575f5ffd5b5035919050565b5f5f60408385031215611010575f5ffd5b50508035926020909101359150565b5f5f60408385031215611030575f5ffd5b61103983610f37565b915061104760208401610f37565b90509250929050565b600181811c9082168061106457607f821691505b60208210810361108257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761031c5761031c611088565b5f826110cd57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f602082840312156110fb575f5ffd5b81518015158114610fe1575f5ffd5b8181038181111561031c5761031c611088565b6001600160a01b039384168152919092166020820152604081019190915260600190565b8082018082111561031c5761031c611088565b6001600160a01b03939093168352602083019190915260408201526060019056fea26469706673582212205bfc9a118b5306cc143a68ace2f9ab6bbfdaec3241a5482ea44c5217f7eff51a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F64B55B GT PUSH2 0x8F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x101 JUMP JUMPDEST PUSH2 0x170 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x111 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x181 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH2 0x181 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x101F JUMP JUMPDEST PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0x1050 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B4 SWAP1 PUSH2 0x1050 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x316 DUP2 DUP6 DUP6 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x32F DUP6 DUP3 DUP6 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x33A DUP6 DUP6 DUP6 PUSH2 0xC54 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x288 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x43616E6E6F742072656D6F76652030206C6971756964697479 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3B0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x5 SLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 POP DUP1 DUP5 PUSH1 0x6 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x3F6 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E747320746F207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x44C CALLER DUP6 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x49A SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x529 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x5F2 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C985B9CD9995C88104819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x6C2 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C985B9CD9995C88108819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x752 JUMPI POP DUP2 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH2 0x762 SWAP1 DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6971756964697479206D696E746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x7C8 CALLER DUP3 PUSH2 0xCE9 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x316 DUP2 DUP6 DUP6 PUSH2 0xC54 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21034B7383ABA103A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420696E206D75737420626520706F736974697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x93D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x111D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x959 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP PUSH0 PUSH2 0x98B DUP4 PUSH2 0x3E5 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAC5 JUMPI PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH2 0x9FF DUP2 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xA7D SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP POP POP PUSH2 0xBC0 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD DUP3 PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x6 SLOAD PUSH2 0x3E8 PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 POP PUSH2 0xAFE DUP2 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0xB7C SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB98 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBFE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC0E DUP5 DUP5 PUSH2 0xBC7 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC40 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0xC4E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD1D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC7D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xBFE DUP4 DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xCE5 DUP3 PUSH0 DUP4 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xCE5 PUSH0 DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD46 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD6F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC4E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDE1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE19 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1141 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE76 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE92 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEF5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF6C DUP4 PUSH2 0xF37 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFA9 DUP5 PUSH2 0xF37 JUMP JUMPDEST SWAP3 POP PUSH2 0xFB7 PUSH1 0x20 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFE1 DUP3 PUSH2 0xF37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1010 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1039 DUP4 PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP PUSH2 0x1047 PUSH1 0x20 DUP5 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1064 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1082 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xFC SWAP11 GT DUP12 MSTORE8 MOD 0xCC EQ GASPRICE PUSH9 0xACE2F9AB6BBFDAEC32 COINBASE 0xA5 BASEFEE 0x2E LOG4 0x4C MSTORE OR 0xF7 0xEF CREATE2 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "226:3729:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:108:5;752:8;;762;;671:108;;;;611:25:6;;;667:2;652:18;;645:34;;;;584:18;671:108:5;437:248:6;3902:186:1;;;;;;:::i;:::-;;:::i;:::-;;;1338:14:6;;1331:22;1313:41;;1301:2;1286:18;3902:186:1;1173:187:6;263:30:5;;;;;;;;;;;;:::i;2803:97:1:-;2881:12;;2803:97;;;1733:25:6;;;1721:2;1706:18;2803:97:1;1587:177:6;369:23:5;;;;;;4680:244:1;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2290:36:6;;2278:2;2263:18;2688:82:1;2148:184:6;300:30:5;;;;;2933:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:1;2998:7;3024:18;;;;;;;;;;;;2933:116;1962:93;;;:::i;1831:707:5:-;;;;;;:::i;:::-;;:::i;861:921::-;;;;;;:::i;:::-;;:::i;3244:178:1:-;;;;;;:::i;:::-;;:::i;2615:1337:5:-;;;;;;:::i;:::-;;:::i;339:23::-;;;;;;3455:140:1;;;;;;:::i;:::-;;:::i;1760:89::-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:4;4029:31:1;735:10:4;4045:7:1;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;4680:244::-;4767:4;735:10:4;4823:37:1;4839:4;735:10:4;4854:5:1;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:1;;4680:244;-1:-1:-1;;;;4680:244:1:o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;1831:707:5:-;1896:15;1913;1966:1;1949:14;:18;1941:56;;;;-1:-1:-1;;;1941:56:5;;3962:2:6;1941:56:5;;;3944:21:6;4001:2;3981:18;;;3974:30;-1:-1:-1;;;4020:18:6;;;4013:55;4085:18;;1941:56:5;;;;;;;;;2018:15;2036:13;2881:12:1;;;2803:97;2036:13:5;2018:31;;2100:7;2082:14;2071:8;;:25;;;;:::i;:::-;2070:37;;;;:::i;:::-;2060:47;;2158:7;2140:14;2129:8;;:25;;;;:::i;:::-;2128:37;;;;:::i;:::-;2118:47;;2196:1;2186:7;:11;:26;;;;;2211:1;2201:7;:11;2186:26;2178:71;;;;-1:-1:-1;;;2178:71:5;;4843:2:6;2178:71:5;;;4825:21:6;;;4862:18;;;4855:30;4921:34;4901:18;;;4894:62;4973:18;;2178:71:5;4641:356:6;2178:71:5;2262:33;2268:10;2280:14;2262:5;:33::i;:::-;2335:36;;-1:-1:-1;;;2335:36:5;;-1:-1:-1;;;;;2335:6:5;:15;;;;:36;;2351:10;;2363:7;;2335:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2403:36:5;;-1:-1:-1;;;2403:36:5;;-1:-1:-1;;;;;2403:6:5;:15;;;;:36;;2419:10;;2431:7;;2403:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2493:7;2481:8;;:19;;;;;;;:::i;:::-;;;;;;;;2523:7;2511:8;;:19;;;;;;;:::i;:::-;;;;;;;;1930:608;1831:707;;;:::o;861:921::-;1050:56;;-1:-1:-1;;;1050:56:5;;935:17;;-1:-1:-1;;;;;1050:6:5;:19;;;;:56;;1070:10;;1090:4;;1097:8;;1050:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1042:86;;;;-1:-1:-1;;;1042:86:5;;6274:2:6;1042:86:5;;;6256:21:6;6313:2;6293:18;;;6286:30;-1:-1:-1;;;6332:18:6;;;6325:47;6389:18;;1042:86:5;6072:341:6;1042:86:5;1147:56;;-1:-1:-1;;;1147:56:5;;-1:-1:-1;;;;;1147:6:5;:19;;;;:56;;1167:10;;1187:4;;1194:8;;1147:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1139:86;;;;-1:-1:-1;;;1139:86:5;;6620:2:6;1139:86:5;;;6602:21:6;6659:2;6639:18;;;6632:30;-1:-1:-1;;;6678:18:6;;;6671:47;6735:18;;1139:86:5;6418:341:6;1139:86:5;2881:12:1;;1298:1:5;1281:18;1277:299;;-1:-1:-1;1417:8:5;1277:299;;;1556:8;;2881:12:1;;1528:24:5;;:8;:24;:::i;:::-;1527:37;;;;:::i;:::-;1515:49;;1277:299;1608:1;1596:9;:13;1588:55;;;;-1:-1:-1;;;1588:55:5;;6966:2:6;1588:55:5;;;6948:21:6;7005:2;6985:18;;;6978:30;7044:31;7024:18;;;7017:59;7093:18;;1588:55:5;6764:353:6;1588:55:5;1654:28;1660:10;1672:9;1654:5;:28::i;:::-;1735:8;1723;;:20;;;;;;;:::i;:::-;;;;;;;;1766:8;1754;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;861:921:5;;;-1:-1:-1;;;861:921:5:o;3244:178:1:-;3313:4;735:10:4;3367:27:1;735:10:4;3384:2:1;3388:5;3367:9;:27::i;2615:1337:5:-;2682:17;2740:6;-1:-1:-1;;;;;2720:27:5;:8;-1:-1:-1;;;;;2720:27:5;;:58;;;;2771:6;-1:-1:-1;;;;;2751:27:5;:8;-1:-1:-1;;;;;2751:27:5;;2720:58;2712:90;;;;-1:-1:-1;;;2712:90:5;;7454:2:6;2712:90:5;;;7436:21:6;7493:2;7473:18;;;7466:30;-1:-1:-1;;;7512:18:6;;;7505:49;7571:18;;2712:90:5;7252:343:6;2712:90:5;2833:1;2821:9;:13;2813:52;;;;-1:-1:-1;;;2813:52:5;;7802:2:6;2813:52:5;;;7784:21:6;7841:2;7821:18;;;7814:30;7880:28;7860:18;;;7853:56;7926:18;;2813:52:5;7600:350:6;2813:52:5;2926:67;;-1:-1:-1;;;2926:67:5;;-1:-1:-1;;;;;2926:29:5;;;;;:67;;2956:10;;2976:4;;2983:9;;2926:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3093:23:5;3119:15;:9;3131:3;3119:15;:::i;:::-;3093:41;;3194:6;-1:-1:-1;;;;;3174:27:5;:8;-1:-1:-1;;;;;3174:27:5;;3170:775;;3258:17;3296:8;;3278:15;:26;;;;:::i;:::-;3258:46;;3319:19;3361:15;3342:8;;3353:4;3342:15;;;;:::i;:::-;3341:35;;;;:::i;:::-;3319:57;-1:-1:-1;3403:23:5;3319:57;3403:9;:23;:::i;:::-;3391:35;;3467:9;3455:8;;:21;;;;;;;:::i;:::-;;;;;;;;3503:9;3491:8;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;3527:38:5;;-1:-1:-1;;;3527:38:5;;-1:-1:-1;;;;;3527:6:5;:15;;;;:38;;3543:10;;3555:9;;3527:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3203:374;;3170:775;;;3638:17;3676:8;;3658:15;:26;;;;:::i;:::-;3638:46;;3699:19;3741:15;3722:8;;3733:4;3722:15;;;;:::i;:::-;3721:35;;;;:::i;:::-;3699:57;-1:-1:-1;3783:23:5;3699:57;3783:9;:23;:::i;:::-;3771:35;;3835:9;3823:8;;:21;;;;;;;:::i;:::-;;;;;;;;3871:9;3859:8;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;3895:38:5;;-1:-1:-1;;;3895:38:5;;-1:-1:-1;;;;;3895:6:5;:15;;;;:38;;3911:10;;3923:9;;3895:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3583:362;;3170:775;2701:1251;2615:1337;;;;:::o;3455:140:1:-;-1:-1:-1;;;;;3561:18:1;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140::o;8630:128::-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;-1:-1:-1;;10484:16:1;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;-1:-1:-1;;;10591:60:1;;;;;;;;;;:::i;10536:130::-;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:1;;5376:86;;5448:1;5421:30;;-1:-1:-1;;;5421:30:1;;;;;;;;:::i;5376:86::-;-1:-1:-1;;;;;5475:16:1;;5471:86;;5543:1;5514:32;;-1:-1:-1;;;5514:32:1;;;;;;;;:::i;5471:86::-;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;7888:206::-;-1:-1:-1;;;;;7958:21:1;;7954:89;;8029:1;8002:30;;-1:-1:-1;;;8002:30:1;;;;;;;;:::i;7954:89::-;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;7362:208::-;-1:-1:-1;;;;;7432:21:1;;7428:91;;7505:1;7476:32;;-1:-1:-1;;;7476:32:1;;;;;;;;:::i;7428:91::-;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;9605:432::-;-1:-1:-1;;;;;9717:19:1;;9713:89;;9788:1;9759:32;;-1:-1:-1;;;9759:32:1;;;;;;;;:::i;9713:89::-;-1:-1:-1;;;;;9815:21:1;;9811:90;;9887:1;9859:31;;-1:-1:-1;;;9859:31:1;;;;;;;;:::i;9811:90::-;-1:-1:-1;;;;;9910:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:1;9998:5;-1:-1:-1;;;;;9989:31:1;;10014:5;9989:31;;;;1733:25:6;;1721:2;1706:18;;1587:177;9989:31:1;;;;;;;;9605:432;;;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:1;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:1;;-1:-1:-1;5997:540:1;;-1:-1:-1;;;;;6211:15:1;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6315:4;6321:11;6334:5;6290:50;;-1:-1:-1;;;6290:50:1;;;;;;;;;;:::i;6240:115::-;-1:-1:-1;;;;;6475:15:1;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:1;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:1;6996:4;-1:-1:-1;;;;;6987:25:1;;7006:5;6987:25;;;;1733::6;;1721:2;1706:18;;1587:177;6987:25:1;;;;;;;;5912:1107;;;:::o;14:418:6:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;690:173::-;758:20;;-1:-1:-1;;;;;807:31:6;;797:42;;787:70;;853:1;850;843:12;787:70;690:173;;;:::o;868:300::-;936:6;944;997:2;985:9;976:7;972:23;968:32;965:52;;;1013:1;1010;1003:12;965:52;1036:29;1055:9;1036:29;:::i;:::-;1026:39;1134:2;1119:18;;;;1106:32;;-1:-1:-1;;;868:300:6:o;1365:217::-;-1:-1:-1;;;;;1543:32:6;;;;1525:51;;1513:2;1498:18;;1365:217::o;1769:374::-;1846:6;1854;1862;1915:2;1903:9;1894:7;1890:23;1886:32;1883:52;;;1931:1;1928;1921:12;1883:52;1954:29;1973:9;1954:29;:::i;:::-;1944:39;;2002:38;2036:2;2025:9;2021:18;2002:38;:::i;:::-;1769:374;;1992:48;;-1:-1:-1;;;2109:2:6;2094:18;;;;2081:32;;1769:374::o;2337:186::-;2396:6;2449:2;2437:9;2428:7;2424:23;2420:32;2417:52;;;2465:1;2462;2455:12;2417:52;2488:29;2507:9;2488:29;:::i;:::-;2478:39;2337:186;-1:-1:-1;;;2337:186:6:o;2528:226::-;2587:6;2640:2;2628:9;2619:7;2615:23;2611:32;2608:52;;;2656:1;2653;2646:12;2608:52;-1:-1:-1;2701:23:6;;2528:226;-1:-1:-1;2528:226:6:o;2759:346::-;2827:6;2835;2888:2;2876:9;2867:7;2863:23;2859:32;2856:52;;;2904:1;2901;2894:12;2856:52;-1:-1:-1;;2949:23:6;;;3069:2;3054:18;;;3041:32;;-1:-1:-1;2759:346:6:o;3110:260::-;3178:6;3186;3239:2;3227:9;3218:7;3214:23;3210:32;3207:52;;;3255:1;3252;3245:12;3207:52;3278:29;3297:9;3278:29;:::i;:::-;3268:39;;3326:38;3360:2;3349:9;3345:18;3326:38;:::i;:::-;3316:48;;3110:260;;;;;:::o;3375:380::-;3454:1;3450:12;;;;3497;;;3518:61;;3572:4;3564:6;3560:17;3550:27;;3518:61;3625:2;3617:6;3614:14;3594:18;3591:38;3588:161;;3671:10;3666:3;3662:20;3659:1;3652:31;3706:4;3703:1;3696:15;3734:4;3731:1;3724:15;3588:161;;3375:380;;;:::o;4114:127::-;4175:10;4170:3;4166:20;4163:1;4156:31;4206:4;4203:1;4196:15;4230:4;4227:1;4220:15;4246:168;4319:9;;;4350;;4367:15;;;4361:22;;4347:37;4337:71;;4388:18;;:::i;4419:217::-;4459:1;4485;4475:132;;4529:10;4524:3;4520:20;4517:1;4510:31;4564:4;4561:1;4554:15;4592:4;4589:1;4582:15;4475:132;-1:-1:-1;4621:9:6;;4419:217::o;5002:274::-;-1:-1:-1;;;;;5194:32:6;;;;5176:51;;5258:2;5243:18;;5236:34;5164:2;5149:18;;5002:274::o;5281:277::-;5348:6;5401:2;5389:9;5380:7;5376:23;5372:32;5369:52;;;5417:1;5414;5407:12;5369:52;5449:9;5443:16;5502:5;5495:13;5488:21;5481:5;5478:32;5468:60;;5524:1;5521;5514:12;5563:128;5630:9;;;5651:11;;;5648:37;;;5665:18;;:::i;5696:371::-;-1:-1:-1;;;;;5916:32:6;;;5898:51;;5985:32;;;;5980:2;5965:18;;5958:60;6049:2;6034:18;;6027:34;;;;5886:2;5871:18;;5696:371::o;7122:125::-;7187:9;;;7208:10;;;7205:36;;;7221:18;;:::i;7955:345::-;-1:-1:-1;;;;;8175:32:6;;;;8157:51;;8239:2;8224:18;;8217:34;;;;8282:2;8267:18;;8260:34;8145:2;8130:18;;7955:345::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "904600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24756",
								"balanceOf(address)": "2559",
								"decimals()": "331",
								"getReserves()": "4430",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserveA()": "2448",
								"reserveB()": "2405",
								"swap(address,uint256)": "infinite",
								"symbol()": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"totalSupply()": "2369",
								"transfer(address,uint256)": "51325",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 476,
									"end": 632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 476,
									"end": 632,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 632,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20B5B4B7102628102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "414B2D4C5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 565,
									"end": 589,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 565,
									"end": 589,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 565,
									"end": 589,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 565,
									"end": 589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 565,
									"end": 589,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 600,
									"end": 624,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 600,
									"end": 624,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 600,
									"end": 624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 494,
									"end": 621,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 494,
									"end": 621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 555,
									"end": 565,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 550,
									"end": 553,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 546,
									"end": 566,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 567,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 586,
									"end": 590,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 576,
									"end": 591,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 610,
									"end": 614,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 615,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 811,
									"end": 828,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 801,
									"end": 828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 769,
									"end": 830,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 865,
									"end": 879,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 845,
									"end": 863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 842,
									"end": 880,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 922,
									"end": 932,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 917,
									"end": 920,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 913,
									"end": 933,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 934,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 947,
									"end": 962,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 985,
									"end": 989,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 990,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1241,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1234,
									"end": 1237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1242,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1281,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1323,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1392,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1366,
									"end": 1393,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1394,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1429,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1452,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1498,
									"end": 1501,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1487,
									"end": 1507,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1508,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1576,
									"end": 1578,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 1579,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1602,
									"end": 1603,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1591,
									"end": 1604,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1137,
									"end": 1655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2006,
									"end": 2024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2122,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2085,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2035,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2212,
									"end": 2214,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2940,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2980,
									"end": 3006,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1804,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1805,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1766,
									"end": 1806,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1820,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1084,
									"end": 1085,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2392,
									"end": 2399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2386,
									"end": 2400,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2581,
									"end": 2585,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2535,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2382,
									"end": 2385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2628,
									"end": 2634,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2619,
									"end": 2626,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2616,
									"end": 2635,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2683,
									"end": 2709,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2764,
									"end": 2788,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2797,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2756,
									"end": 2798,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2799,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2861,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 3130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "797"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 3955,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bfc9a118b5306cc143a68ace2f9ab6bbfdaec3241a5482ea44c5217f7eff51a64736f6c634300081e0033",
									".code": [
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "5F64B55B"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "D004F0F7"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "DC5FA6C5"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "902F1AC"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "FC63D10"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "19E36F3B"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 3955,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 671,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 752,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 752,
											"end": 760,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 762,
											"end": 770,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 671,
											"end": 779,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 671,
											"end": 779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 671,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 671,
											"end": 779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 611,
											"end": 636,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 611,
											"end": 636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 652,
											"end": 670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 645,
											"end": 679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 584,
											"end": 602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 671,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 685,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1173,
											"end": 1360,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 263,
											"end": 293,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 263,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 263,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1587,
											"end": 1764,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 392,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 369,
											"end": 392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 369,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 369,
											"end": 392,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 369,
											"end": 392,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2290,
											"end": 2326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2148,
											"end": 2332,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 300,
											"end": 330,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 300,
											"end": 330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 300,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 300,
											"end": 330,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "797"
										},
										{
											"begin": 300,
											"end": 330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 300,
											"end": 330,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1831,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 861,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 861,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2615,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2615,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 362,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 339,
											"end": 362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 339,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 339,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 339,
											"end": 362,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 339,
											"end": 362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 339,
											"end": 362,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F742072656D6F76652030206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1941,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2071,
											"end": 2079,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2071,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2070,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2070,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2107,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2129,
											"end": 2137,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2129,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2129,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2128,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2128,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2186,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4955,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E7420616D6F756E747320746F207769746864726177"
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 4956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4641,
											"end": 4997,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2178,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2262,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2335,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2335,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2335,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "797"
										},
										{
											"begin": 2403,
											"end": 2418,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2418,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2403,
											"end": 2418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2403,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2403,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2481,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2481,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2530,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2511,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2511,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 2538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 935,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1105,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1050,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1050,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1050,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6256,
											"end": 6277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6315,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C88104819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6407,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6389,
											"end": 6407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6072,
											"end": 6413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1042,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "797"
										},
										{
											"begin": 1147,
											"end": 1166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1166,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1147,
											"end": 1166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1202,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1147,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1147,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1147,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6659,
											"end": 6661,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C88108819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6671,
											"end": 6718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6418,
											"end": 6759,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1139,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1564,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1556,
											"end": 1564,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1536,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1528,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1527,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1277,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E74206C6971756964697479206D696E746564000000"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6764,
											"end": 7117,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1588,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1660,
											"end": 1670,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1654,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1682,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1654,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1723,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1723,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1762,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1754,
											"end": 1762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1754,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 861,
											"end": 1782,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 861,
											"end": 1782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2747,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "797"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2751,
											"end": 2778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2759,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2751,
											"end": 2778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2720,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7436,
											"end": 7457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21034B7383ABA103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7252,
											"end": 7595,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2712,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2834,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7814,
											"end": 7844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7880,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E7420696E206D75737420626520706F736974697665000000000000"
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7600,
											"end": 7950,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 2980,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 2980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2926,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2926,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2926,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3119,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3182,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3201,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3278,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3342,
											"end": 3350,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3342,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3341,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3341,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3403,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3319,
											"end": 3376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3412,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3403,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3403,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3455,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3455,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3499,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3491,
											"end": 3499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3491,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3512,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3527,
											"end": 3533,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "797"
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3527,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3527,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 3577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3203,
											"end": 3577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3658,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3658,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3722,
											"end": 3730,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3722,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3721,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3721,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3783,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3699,
											"end": 3756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3783,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3806,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3783,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3806,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3844,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3823,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3823,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3880,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3867,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3859,
											"end": 3867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3859,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3880,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 3895,
											"end": 3910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3910,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3895,
											"end": 3910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3895,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3895,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3170,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1764,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1764,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 690,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 778,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 778,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 807,
											"end": 838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 797,
											"end": 839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 797,
											"end": 839,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 787,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 787,
											"end": 857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 787,
											"end": 857,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 787,
											"end": 857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 690,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 690,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1168,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 868,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 976,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 972,
											"end": 995,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 965,
											"end": 1017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 965,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 965,
											"end": 1017,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 965,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 965,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1036,
											"end": 1065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1138,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1138,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 1168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1582,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1365,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1575,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 2143,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1769,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1913,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1918,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1933,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1954,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1983,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2034,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2002,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2002,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 2143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 2143,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2040,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 2040,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1769,
											"end": 2143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2337,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2452,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2417,
											"end": 2469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2417,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2507,
											"end": 2516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2488,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2488,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2517,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2523,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2754,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2528,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2643,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2608,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 3105,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2759,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2891,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2856,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2972,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2972,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2759,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3236,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3218,
											"end": 3225,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3242,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3259,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3207,
											"end": 3259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3257,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3207,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3278,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3278,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3360,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3326,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3375,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3518,
											"end": 3579,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3579,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3518,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3628,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3588,
											"end": 3749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3681,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3662,
											"end": 3682,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3703,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3696,
											"end": 3711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3731,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3749,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3588,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4241,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4114,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4185,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4166,
											"end": 4186,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4196,
											"end": 4211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4235,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4246,
											"end": 4414,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4246,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4383,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4383,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4384,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4337,
											"end": 4408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4388,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4636,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4419,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4475,
											"end": 4607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4539,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4520,
											"end": 4540,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4568,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4561,
											"end": 4562,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4597,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 4475,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4621,
											"end": 4630,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5276,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5002,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5166,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5558,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5281,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5404,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5502,
											"end": 5507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5468,
											"end": 5528,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5691,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5563,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5648,
											"end": 5685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5665,
											"end": 5683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5696,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6017,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6017,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 6018,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6049,
											"end": 6051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7247,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7122,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7187,
											"end": 7196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7187,
											"end": 7196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7187,
											"end": 7196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7218,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7205,
											"end": 7241,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7221,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 8300,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7955,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8175,
											"end": 8207,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8207,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8208,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8239,
											"end": 8241,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8147,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 8300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AmmExchange.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getReserves()": "0902f1ac",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swap(address,uint256)": "d004f0f7",
							"symbol()": "95d89b41",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpTokenAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AmmExchange.sol\":\"AmmExchange\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AmmExchange.sol\":{\"keccak256\":\"0xed9c5472c7bf06a2685ccd53c0e5961b7d52ea5d5aba77dde498d9e12d663524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83f57d3318487fcf6e1684dd4d5bc3ad8567fa8453195ca94989cffb1521b298\",\"dweb:/ipfs/QmR213xJKxgHPEB33gsMX9G9YXxACPXcHgGQu9rPNhp7e6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 799,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "reserveA",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "contracts/AmmExchange.sol:AmmExchange",
								"label": "reserveB",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/AmmExchange.sol": {
				"ast": {
					"absolutePath": "contracts/AmmExchange.sol",
					"exportedSymbols": {
						"AmmExchange": [
							1135
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 730,
							"src": "61:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 652,
							"src": "119:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"250:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "250:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "250:5:5"
								}
							],
							"canonicalName": "AmmExchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								651,
								41,
								755,
								729,
								785
							],
							"name": "AmmExchange",
							"nameLocation": "235:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 794,
									"mutability": "immutable",
									"name": "tokenA",
									"nameLocation": "287:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "263:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"263:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "263:6:5"
										},
										"referencedDeclaration": 729,
										"src": "263:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 797,
									"mutability": "immutable",
									"name": "tokenB",
									"nameLocation": "324:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "300:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 795,
											"name": "IERC20",
											"nameLocations": [
												"300:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "300:6:5"
										},
										"referencedDeclaration": 729,
										"src": "300:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 799,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "354:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "339:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 801,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "384:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "369:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "554:78:5",
										"statements": [
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "565:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 814,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "581:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 813,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "574:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "574:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "565:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "565:24:5"
											},
											{
												"expression": {
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "600:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 820,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 819,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "609:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "609:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "600:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "600:24:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "416b696e204c5020546f6b656e",
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "528:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aeef614484eb8014bb08650699fe37c3f4258fd9dc027711a8e6e83e72337dd3",
														"typeString": "literal_string \"Akin LP Token\""
													},
													"value": "Akin LP Token"
												},
												{
													"hexValue": "414b2d4c50",
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9367d81b5785075e8f84d74660dad6d5956879a17c4e17043a9cc1d9cdd271fe",
														"typeString": "literal_string \"AK-LP\""
													},
													"value": "AK-LP"
												}
											],
											"id": 810,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 807,
												"name": "ERC20",
												"nameLocations": [
													"522:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "522:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "522:31:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "496:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "488:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "513:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "505:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:34:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:5"
									},
									"scope": 1135,
									"src": "476:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "733:46:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 832,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "752:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 833,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "762:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 834,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "751:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 831,
												"id": 835,
												"nodeType": "Return",
												"src": "744:27:5"
											}
										]
									},
									"functionSelector": "0902f1ac",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "680:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "715:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "724:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:18:5"
									},
									"scope": 1135,
									"src": "671:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "954:828:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 849,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1070:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1074:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1070:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 853,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1090:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AmmExchange_$1135",
																				"typeString": "contract AmmExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AmmExchange_$1135",
																				"typeString": "contract AmmExchange"
																			}
																		],
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1082:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 851,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1082:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1082:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 855,
																	"name": "_amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1097:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 847,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1050:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1057:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "1050:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722041206661696c6564",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1108:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc05cf861e9a7afd75d3a07a27aab1251715454224f78199d63bde7a07d3e37a",
																"typeString": "literal_string \"Transfer A failed\""
															},
															"value": "Transfer A failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc05cf861e9a7afd75d3a07a27aab1251715454224f78199d63bde7a07d3e37a",
																"typeString": "literal_string \"Transfer A failed\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1042:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "1042:86:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 863,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1171:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1167:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 867,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1187:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AmmExchange_$1135",
																				"typeString": "contract AmmExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AmmExchange_$1135",
																				"typeString": "contract AmmExchange"
																			}
																		],
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1179:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 865,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1179:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1179:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "_amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "1194:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 861,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "1147:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1154:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 728,
																"src": "1147:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1147:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722042206661696c6564",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9c7225611efcf9985316b9201ddc542c081cfa5a75cf93866b7ec8f68500689",
																"typeString": "literal_string \"Transfer B failed\""
															},
															"value": "Transfer B failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9c7225611efcf9985316b9201ddc542c081cfa5a75cf93866b7ec8f68500689",
																"typeString": "literal_string \"Transfer B failed\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1139:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1139:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1139:86:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 874,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1281:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1281:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1298:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1281:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "1443:133:5",
													"statements": [
														{
															"expression": {
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 883,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "1515:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 884,
																					"name": "_amountA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "1528:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 885,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "1539:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1539:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1528:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 888,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1527:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 889,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1556:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1527:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1515:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 892,
															"nodeType": "ExpressionStatement",
															"src": "1515:49:5"
														}
													]
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "1277:299:5",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "1301:136:5",
													"statements": [
														{
															"expression": {
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 878,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "1405:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 879,
																	"name": "_amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "1417:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1405:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 881,
															"nodeType": "ExpressionStatement",
															"src": "1405:20:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "1596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1608:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1596:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479206d696e746564",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1611:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6fe24d4d496c9aa03e79515e2b1d45390a780027b3e2e43b0558c23d6aacee7",
																"typeString": "literal_string \"Insufficient liquidity minted\""
															},
															"value": "Insufficient liquidity minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6fe24d4d496c9aa03e79515e2b1d45390a780027b3e2e43b0558c23d6aacee7",
																"typeString": "literal_string \"Insufficient liquidity minted\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1588:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "1588:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 903,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1660:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1664:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1660:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1672:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1654:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "1654:28:5"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 908,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1723:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 909,
														"name": "_amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1735:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1723:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "1723:20:5"
											},
											{
												"expression": {
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "1754:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 913,
														"name": "_amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "1766:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1754:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1754:20:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "_amountA",
												"nameLocation": "891:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "883:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "_amountB",
												"nameLocation": "909:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "901:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:36:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "943:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "935:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:19:5"
									},
									"scope": 1135,
									"src": "861:921:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "1930:608:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "_lpTokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "1949:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1966:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1949:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742072656d6f76652030206c6971756964697479",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1969:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbefc1394a9663abb98c29509318d8f08d19ffc71ec61cf3b5ff3557905f4a7f",
																"typeString": "literal_string \"Cannot remove 0 liquidity\""
															},
															"value": "Cannot remove 0 liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbefc1394a9663abb98c29509318d8f08d19ffc71ec61cf3b5ff3557905f4a7f",
																"typeString": "literal_string \"Cannot remove 0 liquidity\""
															}
														],
														"id": 926,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1941:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "1941:56:5"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "totalLP",
														"nameLocation": "2026:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "2018:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2018:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 935,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2036:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2018:31:5"
											},
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 938,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "2060:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2071:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 940,
																		"name": "_lpTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "2082:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2071:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2070:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 943,
															"name": "totalLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "2100:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2070:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2060:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "2060:47:5"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 947,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "2118:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 948,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "2129:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 949,
																		"name": "_lpTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "2140:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2129:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 951,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2128:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 952,
															"name": "totalLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "2158:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2128:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2118:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "2118:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "2186:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2186:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 960,
																	"name": "amountB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "2201:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2211:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2201:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2186:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616d6f756e747320746f207769746864726177",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2214:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_853566487f2e621eab8c339b98dec3baa9bd207b1822aefec5a36c1dcbb67bd7",
																"typeString": "literal_string \"Insufficient amounts to withdraw\""
															},
															"value": "Insufficient amounts to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_853566487f2e621eab8c339b98dec3baa9bd207b1822aefec5a36c1dcbb67bd7",
																"typeString": "literal_string \"Insufficient amounts to withdraw\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2178:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2178:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 968,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2268:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2272:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2268:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "_lpTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "2280:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 967,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2262:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "2262:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2351:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2355:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2351:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2363:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 973,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2335:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2342:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2335:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2335:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2419:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2423:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2419:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2431:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 981,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2403:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2410:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2403:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2403:36:5"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "2481:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 990,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2481:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2481:19:5"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "2511:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 994,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "2523:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2511:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "2511:19:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "1840:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "_lpTokenAmount",
												"nameLocation": "1864:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1856:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:24:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1904:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1896:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1921:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "1913:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:34:5"
									},
									"scope": 1135,
									"src": "1831:707:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "2701:1251:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1008,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2720:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1011,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "2740:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2732:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1009,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2732:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2732:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2720:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1014,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2751:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1017,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "2771:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2763:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1015,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2763:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2763:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2751:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2720:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420746f6b656e",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															},
															"value": "Invalid input token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84f0c120f9c89279530f293487f2886c10a3854abff7bba8786124cc26b0c21a",
																"typeString": "literal_string \"Invalid input token\""
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2712:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2712:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "2712:90:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "_amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "2821:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2821:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420696e206d75737420626520706f736974697665",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2836:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f653d3b2f2097e41c35d308bc564aebe4f4884b6f793c5db2a9cdd5eca51622",
																"typeString": "literal_string \"Amount in must be positive\""
															},
															"value": "Amount in must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f653d3b2f2097e41c35d308bc564aebe4f4884b6f793c5db2a9cdd5eca51622",
																"typeString": "literal_string \"Amount in must be positive\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2813:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2813:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1035,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2956:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2960:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2956:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1039,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2976:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AmmExchange_$1135",
																		"typeString": "contract AmmExchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AmmExchange_$1135",
																		"typeString": "contract AmmExchange"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2968:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1037,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2968:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2968:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2983:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "_tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2933:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1031,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "2926:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2926:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2926:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "2926:67:5"
											},
											{
												"assignments": [
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "3101:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "3093:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3093:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "_amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "3119:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3131:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "3119:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3093:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "_tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "3174:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1053,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "3194:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3186:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1051,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3186:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3186:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3174:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "3583:362:5",
													"statements": [
														{
															"assignments": [
																1095
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1095,
																	"mutability": "mutable",
																	"name": "numerator",
																	"nameLocation": "3646:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1131,
																	"src": "3638:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1094,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3638:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1099,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1096,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3658:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1097,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "3676:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3658:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3638:46:5"
														},
														{
															"assignments": [
																1101
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1101,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nameLocation": "3707:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1131,
																	"src": "3699:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1100,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3699:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1108,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1102,
																				"name": "reserveB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "3722:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31303030",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3733:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"src": "3722:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1105,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3721:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1106,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3741:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3699:57:5"
														},
														{
															"expression": {
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1109,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "3771:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1110,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "3783:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1111,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "3795:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3783:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3771:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1114,
															"nodeType": "ExpressionStatement",
															"src": "3771:35:5"
														},
														{
															"expression": {
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1115,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "3823:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1116,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3835:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3823:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "3823:21:5"
														},
														{
															"expression": {
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1119,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "3859:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1120,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "3871:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3859:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1122,
															"nodeType": "ExpressionStatement",
															"src": "3859:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1126,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3911:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3915:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3911:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "3923:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1123,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "3895:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3902:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "3895:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3895:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "3895:38:5"
														}
													]
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "3170:775:5",
												"trueBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "3203:374:5",
													"statements": [
														{
															"assignments": [
																1057
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1057,
																	"mutability": "mutable",
																	"name": "numerator",
																	"nameLocation": "3266:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1093,
																	"src": "3258:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1056,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3258:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1061,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1058,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3278:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1059,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "3296:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3278:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3258:46:5"
														},
														{
															"assignments": [
																1063
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1063,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nameLocation": "3327:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1093,
																	"src": "3319:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3319:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1070,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1064,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "3342:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31303030",
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3353:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"src": "3342:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3341:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1068,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3361:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3341:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3319:57:5"
														},
														{
															"expression": {
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1071,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "3391:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1072,
																		"name": "numerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "3403:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1073,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "3415:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3403:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3391:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "3391:35:5"
														},
														{
															"expression": {
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1077,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "3455:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1078,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3467:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3455:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "3455:21:5"
														},
														{
															"expression": {
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1081,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "3491:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1082,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "3503:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3491:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1084,
															"nodeType": "ExpressionStatement",
															"src": "3491:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1088,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3543:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3547:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3543:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "3555:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1085,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "3527:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3534:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "3527:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1092,
															"nodeType": "ExpressionStatement",
															"src": "3527:38:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d004f0f7",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2624:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_tokenIn",
												"nameLocation": "2637:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2629:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "2655:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2647:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:37:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2690:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2682:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:19:5"
									},
									"scope": 1135,
									"src": "2615:1337:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1136,
							"src": "226:3729:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:3922:5"
				},
				"id": 5
			}
		}
	}
}